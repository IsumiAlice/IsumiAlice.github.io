<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Arm PL 環境配置</title>
    <url>/2020/04/19/Arm-PL/</url>
    <content><![CDATA[<p>Arm Performance Libraries 作為 Linux 的 Arm Compiler 的一部分安裝，並且需要 Arm Allinea Studio 許可證</p>
<h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>Arm Allinea Studio 工具套件為在 Arm 硬體上開發 HPC 應用程式提供了完整的解決方案。 它包括： </p>
<ul>
<li>Arm C/C ++/Fortran 編譯器 </li>
<li>ArmPL </li>
<li>Arm Forge（Arm DDT，Arm MAP和Arm Performance Reports） </li>
</ul>
<p>需要許可證來使用這些工具。 有兩種許可證， Named User 和 Floating</p>
<p>在獲得許可證後，按照以下說明將其新增到系統中： </p>
<h3 id="Add-a-named-user-license"><a href="#Add-a-named-user-license" class="headerlink" title="Add a named user license"></a>Add a named user license</h3><ol>
<li>在 <code>/opt/arm/</code> 目錄中建立一個名為 licenses 的目錄 </li>
<li>將許可證檔案複製到 <code>/opt/arm/licenses</code> 目錄；如果選擇將許可證檔案放在其他位置，則必須將 <code>ARM_LICENSE_DIR</code> 環境變數設定為指向它 <code>export ARM_LICENSE_DIR=/opt/arm/licenses</code></li>
<li>Arm Forge 和 Arm Performance Reports 在其特定的安裝目錄中搜索許可證。如果使用的是 Arm Allinea Studio 許可證，並且沒有為這些工具使用單獨的許可證，請設定 <code>ALLINEA_LICENSE_DIR</code> 環境變數以將這些工具指向您的 Arm Allinea Studio 許可證 <code>export ALLINEA_LICENSE_DIR=/opt/arm/licenses &gt;</code></li>
</ol>
<p>named user license，無需安裝Arm License Server</p>
<h3 id="Setting-up-a-floating-license"><a href="#Setting-up-a-floating-license" class="headerlink" title="Setting up a floating license"></a>Setting up a floating license</h3><p>必須下載並安裝 <a href="https://developer.arm.com/tools-and-software/server-and-hpc/downloads/arm-licence-server" target="_blank" rel="noopener">Arm License Server</a> </p>
<p>浮動許可證由伺服器許可證檔案和客戶端許可證檔案組成，在<a href="https://www.arm.com/products/development-tools/server-and-hpc/allinea-studio/get-software?_ga=2.43607085.960219704.1587365001-756695113.1577670013" target="_blank" rel="noopener">這裡</a>申請 </p>
<p>檢查客戶端許可證是否包含執行Arm License Server的計算機的主機名或IP地址 </p>
<ol>
<li>將客戶端許可證新增到安裝 Arm Allinea Studio 的計算機上。在 <code>/opt/arm</code> 目錄中建立一個名為 <code>licenses</code> 的目錄 </li>
<li>同 named </li>
<li>同 named </li>
<li>將伺服器許可證檔案新增到安裝 Arm License Server 的計算機上。在 <code>/opt/arm/licenceserver</code> 目錄中建立一個名為 <code>licenses</code> 的目錄，並將您的許可證檔案複製到該目錄中 </li>
<li>重新啟動 Arm License Server </li>
</ol>
<h2 id="下載"><a href="#下載" class="headerlink" title="下載"></a>下載</h2><p><a href="https://developer.arm.com/products/software-development-tools/hpc/arm-allinea-studio/download" target="_blank" rel="noopener">Arm Allinea Studio downloads page</a> </p>
<h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><p>需要 python &gt;= 2.7</p>
<p>需要 C Libraries：SUSE and RHEL: <code>glibc-devel</code> Ubuntu: <code>libc6-dev</code> </p>
<ol>
<li>解壓縮 <code>tar -xvf .tar.gz</code> </li>
<li><code>cd</code> </li>
<li>預設配置安裝 <code>sudo ./.sh</code><br>可以自定義 options</li>
<li>安裝程式將顯示EULA並提示您同意條款 接下來主要介紹 ArmPL 的配置和使用 </li>
</ol>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ol>
<li>檢視可用的環境模組 <code>module avail</code> 可能需要配置MODULEPATH環境變數以包含安裝目錄 <code>export MODULEPATH=$MODULEPATH:/opt/arm/modulefiles/</code> </li>
<li>為您使用的編譯器載入適當的模組，如果使用的是用於Linux的Arm Compiler，則建議僅載入編譯器模組，如果使用gcc，則必須載入所需的特定Arm Performance Libraries模組<br><code>module load Generic-AArch64/RHEL/7/arm-linux-compiler/20.0</code><br>如果使用gcc編譯器，請確保載入正確的模組<br><code>module load Generic-AArch64/RHEL/7/gcc-9.2.0/armpl/20.0.0</code><br>Tips: 可以考慮將模組載入命令新增到您的.profile中，以在每次登入時自動執行它 </li>
<li>根據使用的編譯器，使用以下命令檢查環境<br>| <strong>Compiler</strong> | <strong>Command</strong> |<br>| ———— | —————- |<br>| armclang | <code>which armclang</code> |<br>| gcc | <code>which gcc</code> |</li>
</ol>
<h2 id="舉個例子"><a href="#舉個例子" class="headerlink" title="舉個例子"></a>舉個例子</h2><p>ArmPL 包含許多示例程式，如果是預設安裝的，位置在<code>/opt/arm//examples/</code> </p>
<p>這裡以 <code>fftw_dft_r2c_1d_c_example.c</code> 為例，具體做什麼就不看了 </p>
<p>編譯和連結的選項：<br>-armpl: 與arm編譯器進行編譯和連結時<br>-mcpu = native: 允許編譯器從主機系統推斷要使用的庫<br>-L\lib: 新增庫搜尋路徑<br>-larmpl_lp64: 連結到Arm Performance Libraries<br>-lgfortran: 連結到 gcc Fortran 執行庫<br>-lm: 連結到標準數學庫 </p>
<ol>
<li>編譯原始碼，生成一個目標檔案<br>| <strong>Compiler</strong> | <strong>Command</strong> |<br>| ———— | ———————— |<br>| armclang | <code>armclang -c -armpl -mcpu=native fftw_dft_r2c_1d_c_example.c -o fftw_dft_r2c_1d_c_example.o</code> |<br>| gcc | <code>gcc -c -I/include fftw_dft_r2c_1d_c_example.c -o fftw_dft_r2c_1d_c_example.o</code> |</li>
<li>將目的碼連結到可執行檔案中<br>| <strong>Compiler</strong> | <strong>Command</strong> |<br>| ———— | ————————- |<br>| armclang | <code>armclang fftw_dft_r2c_1d_c_example.o -o fftw_dft_r2c_1d_c_example.exe -armpl -mcpu=native -lm</code> |<br>| gcc | <code>gcc fftw_dft_r2c_1d_c_example.o -L/lib -o fftw_dft_r2c_1d_c_example.exe -larmpl_lp64 -lgfortran -lm</code> |</li>
<li>在Arm系統上執行可執行檔案 <code>./fftw_dft_r2c_1d_c_example.exe</code><br>可以看到相應的輸出 </li>
</ol>
<h2 id="Compile-and-test-the-examples-examples"><a href="#Compile-and-test-the-examples-examples" class="headerlink" title="Compile and test the examples examples"></a>Compile and test the examples examples</h2><p>目錄包含以下內容： </p>
<ul>
<li>一個GNUmakefile，用於生成和執行所有示例程式 </li>
<li>C 原始碼 .c </li>
<li>Fortran原始碼 .f90 </li>
<li>每個示例的預期輸出 .expected </li>
</ul>
<p>Makefile編譯並執行每個示例，然後將生成的輸出與預期的輸出進行比較。任何差異都會標記為錯誤</p>
]]></content>
      <categories>
        <category>技術</category>
      </categories>
      <tags>
        <tag>數學</tag>
        <tag>高效能運算</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo-Theme-Sakura</title>
    <url>/2018/12/12/Hexo-Theme-Sakura/</url>
    <content><![CDATA[<p>hexo-theme-sakura主题 <a href="https://github.com/honjun/hexo-theme-sakura/blob/master/README.md" target="_blank" rel="noopener">English document</a></p>
<p>基于WordPress主题<a href="https://github.com/mashirozx/Sakura/" target="_blank" rel="noopener">Sakura</a>修改成Hexo的主题。</p>
<p><a href="https://sakura.hojun.cn" target="_blank" rel="noopener">demo预览</a></p>
<p>正在开发中……</p>
<p><img src="https://wx3.sinaimg.cn/large/006bYVyvly1g069tuf42oj312w0m8ndq.jpg" alt></p>
<h2 id="交流群"><a href="#交流群" class="headerlink" title="交流群"></a>交流群</h2><p>若你是使用者，加群QQ: 801511924</p>
<p>若你是创作者，加群QQ: 194472590</p>
<h2 id="主题特性"><a href="#主题特性" class="headerlink" title="主题特性"></a>主题特性</h2><ul>
<li>首页大屏视频</li>
<li>首页随机封面</li>
<li>图片懒加载</li>
<li>valine评论</li>
<li>fancy-box相册</li>
<li>pjax支持，音乐不间断</li>
<li>aplayer音乐播放器</li>
<li>多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了）</li>
</ul>
<h2 id="赞赏作者"><a href="#赞赏作者" class="headerlink" title="赞赏作者"></a>赞赏作者</h2><p>如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！</p>
<p><a href="https://www.paypal.me/hojuncn" target="_blank" rel="noopener">paypal</a> | <a href="https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/donate/AliPayQR.jpg" target="_blank" rel="noopener">Alipay 支付宝</a> | <a href="https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/donate/WeChanSQ.jpg" target="_blank" rel="noopener">WeChat Pay 微信支付</a></p>
<h2 id="未完善的使用教程"><a href="#未完善的使用教程" class="headerlink" title="未完善的使用教程"></a>未完善的使用教程</h2><p>那啥？老实说我目前也不是很有条理233333333~</p>
<h2 id="1、主题下载安装"><a href="#1、主题下载安装" class="headerlink" title="1、主题下载安装"></a>1、主题下载安装</h2><p><a href="https://github.com/honjun/hexo-theme-sakura" target="_blank" rel="noopener">hexo-theme-sakura</a>建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。</p>
<p>下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行<code>npm i</code>安装依赖。</p>
<h2 id="2、主题配置"><a href="#2、主题配置" class="headerlink" title="2、主题配置"></a>2、主题配置</h2><h3 id="博客根目录下的-config配置"><a href="#博客根目录下的-config配置" class="headerlink" title="博客根目录下的_config配置"></a>博客根目录下的_config配置</h3><p>站点</p>
<pre><code class="yml"># Site
title: 你的站点名
subtitle:
description: 站点简介
keywords:
author: 作者名
language: zh-cn
timezone:
</code></pre>
<p>部署</p>
<pre><code class="yml">deploy:
  type: git
  repo: 
    github: 你的github仓库地址
    # coding: 你的coding仓库地址
  branch: master
</code></pre>
<p>备份 （使用hexo b发布备份到远程仓库）</p>
<pre><code class="yml">backup:
  type: git
  message: backup my blog of https://honjun.github.io/
  repository:
    # 你的github仓库地址,备份分支名  （建议新建backup分支）
    github: https://github.com/honjun/honjun.github.io.git,backup
    # coding: https://git.coding.net/hojun/hojun.git,backup

</code></pre>
<h3 id="主题目录下的-config配置"><a href="#主题目录下的-config配置" class="headerlink" title="主题目录下的_config配置"></a>主题目录下的_config配置</h3><p>其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分</p>
<pre><code class="yml"># site name
# 站点名 【改】
prefixName: さくら荘その
siteName: hojun

# favicon and site master avatar
# 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】
favicon: /images/favicon.ico
avatar: /img/custom/avatar.jpg

# 站点url 【改】
url: https://sakura.hojun.cn

# 站点介绍（或者说是个人签名）【改】
description: Live your life with passion! With some drive!

# 站点cdn，没有就为空 【改】  若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg
cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6

# 开启pjax 【选】
pjax: 1

# 站点首页的公告信息 【改】
notice: hexo-Sakura主题已经开源，目前正在开发中...

# 懒加载的加载中图片 【选】
lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg

# 站点菜单配置 【选】
menus:
  首页: { path: /, fa: fa-fort-awesome faa-shake }
  归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 
    技术: {path: /categories/技术/, fa: fa-code }, 
    生活: {path: /categories/生活/, fa: fa-file-text-o }, 
    资源: {path: /categories/资源/, fa: fa-cloud-download }, 
    随想: {path: /categories/随想/, fa: fa-commenting-o },
    转载: {path: /categories/转载/, fa: fa-book }
  } }
  清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 
    书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 
    番组: {path: /bangumi/, fa: fa-film faa-vertical }, 
    歌单: {path: /music/, fa: fa-headphones },
    图集: {path: /tags/图集/, fa: fa-photo }
  } }
  留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada }
  友人帐: { path: /links/, fa: fa-link faa-shake }
  赞赏: { path: /donate/, fa: fa-heart faa-pulse }
  关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 
    我？: {path: /about/, fa: fa-meetup}, 
    主题: {path: /theme-sakura/, fa: iconfont icon-sakura },
    Lab: {path: /lab/, fa: fa-cogs },
  } }
  客户端: { path: /client/, fa: fa-android faa-vertical }
  RSS: { path: /atom.xml, fa: fa-rss faa-pulse }

# Home page sort type: -1: newer first，1: older first. 【非】
homePageSortType: -1

# Home page article shown number) 【非】
homeArticleShown: 10

# 背景图片 【选】
bgn: 8

# startdash面板 url, title, desc img 【改】
startdash: 
  - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png}
  - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg}
  - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg}


# your site build time or founded date
# 你的站点建立日期 【改】
siteBuildingTime: 07/17/2018


# 社交按钮(social)  url, img PC端配置 【改】
social:
  github: {url: http://github.com/honjun, img: /img/social/github.png}
  sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png}
  wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png}
  zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png}
  email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg}
  wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png}

# 社交按钮(msocial)  url, img 移动端配置 【改】
msocial:
  github: {url: http://github.com/honjun, fa: fa-github, color: 333}
  weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39}
  qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe}

# 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】
donate:
  alipay: /img/custom/donate/AliPayQR.jpg
  wechat: /img/custom/donate/WeChanQR.jpg
  wechatSQ: /img/custom/donate/WeChanSQ.jpg

# 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】
movies:
  url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2
  # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用
  name: Unbroken.mp4

# 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】
aplayer: 
  id: 2660651585
  server: netease
  type: playlist
  fixed: true
  mini: false
  autoplay: false
  loop: all
  order: random
  preload: auto
  volume: 0.7
  mutex: true

# Valine评论配置【改】
valine: true
v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz
v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ
</code></pre>
<h2 id="分类页和标签页配置"><a href="#分类页和标签页配置" class="headerlink" title="分类页和标签页配置"></a>分类页和标签页配置</h2><h3 id="分类页"><a href="#分类页" class="headerlink" title="分类页"></a>分类页</h3><p><img src="https://ws3.sinaimg.cn/large/006bYVyvly1g07b0gucy9j31060jih76.jpg" alt></p>
<h3 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h3><p><img src="https://wx2.sinaimg.cn/large/006bYVyvly1g07azb2399j31040jgazs.jpg" alt></p>
<p>配置项在\themes\Sakura\languages\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。</p>
<pre><code class="yml">#category
# 按分类名创建
技术:
    #中文标题
    zh: 野生技术协会 
    # 英文标题
    en: Geek – Only for Love
    # 封面图片
    img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg
生活:
    zh: 生活
    en: live
    img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg

#tag
# 标签名即是标题
悦读:
    # 封面图片
    img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg
</code></pre>
<h2 id="单页面封面配置"><a href="#单页面封面配置" class="headerlink" title="单页面封面配置"></a>单页面封面配置</h2><p><img src="https://ws3.sinaimg.cn/large/006bYVyvly1g07b1pi619j31080jge4u.jpg" alt><br>如留言板页面页面，位于source下的comment下，打开index.md如下：</p>
<pre><code class="md">---
title: comment
date: 2018-12-20 23:13:48
keywords: 留言板
description: 
comments: true
# 在这里配置单页面头部图片，自定义替换哦~
photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg
---
</code></pre>
<h2 id="单页面配置"><a href="#单页面配置" class="headerlink" title="单页面配置"></a>单页面配置</h2><h3 id="番组计划页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）"><a href="#番组计划页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）" class="headerlink" title="番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）"></a>番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）</h3><p><img src="https://wx2.sinaimg.cn/large/006bYVyvly1g07b2gyx60j31090jjahj.jpg" alt></p>
<pre><code class="yml">---
layout: bangumi
title: bangumi
comments: false
date: 2019-02-10 21:32:48
keywords:
description:
bangumis:
  # 番组图片
  - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg
  # 番组名
    title: 朝花夕誓——于离别之朝束起约定之花
  # 追番状态 （追番ing/已追完）
    status: 已追完
  # 追番进度
    progress: 100
  # 番剧日文名称
    jp: さよならの朝に約束の花をかざろう
  # 放送时间
    time: 放送时间: 2018-02-24 SUN.
  # 番剧介绍
    desc:  住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。
  - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg
    title: 朝花夕誓——于离别之朝束起约定之花
    status: 已追完
    progress: 50
    jp: さよならの朝に約束の花をかざろう
    time: 放送时间: 2018-02-24 SUN.
    desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。
---
</code></pre>
<h3 id="友链页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）"><a href="#友链页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）" class="headerlink" title="友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）"></a>友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）</h3><p><img src="https://ws3.sinaimg.cn/large/006bYVyvly1g07b39tleej31080jhjv1.jpg" alt></p>
<pre><code class="yml">---
layout: links
title: links
# 创建日期，可以改下
date: 2018-12-19 23:11:06 
# 图片上的标题，自定义修改
keywords: 友人帐 
description: 
# true/false 开启/关闭评论
comments: true 
# 页面头部图片，自定义修改
photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg 
# 友链配置
links: 
  # 类型分组
  - group: 个人项目
    # 类型简介
    desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt;
    items:
    # 友链链接
    - url: https://shino.cc/fgvf
    # 友链头像
      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg
    # 友链站点名
      name: Google
    # 友链介绍  下面雷同
      desc: Google 镜像
    - url: https://shino.cc/fgvf
      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg
      name: Google
      desc: Google 镜像
  # 类型分组...
  - group: 小伙伴们
    desc: 欢迎交换友链 ꉂ(ˊᗜˋ)
    items:
    - url: https://shino.cc/fgvf
      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg
      name: Google
      desc: Google 镜像
    - url: https://shino.cc/fgvf
      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg
      name: Google
      desc: Google 镜像
---
</code></pre>
<h2 id="写文章配置"><a href="#写文章配置" class="headerlink" title="写文章配置"></a>写文章配置</h2><p>主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下：</p>
<pre><code class="md">{% bili video_id [page] %}
</code></pre>
<p>详细使用教程详见<a href="https://github.com/honjun/hexo-tag-bili/blob/master/README-zh_cn.md" target="_blank" rel="noopener">hexo-tag-bili</a>。</p>
<p>hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下：</p>
<pre><code class="md">{% fb_img src [caption] %}
</code></pre>
<p>详细使用教程详见<a href="https://github.com/honjun/hexo-tag-fancybox_img/blob/master/README-zh_cn.md" target="_blank" rel="noopener">hexo-tag-fancybox_img</a></p>
<h2 id="还有啥，一时想不起来……"><a href="#还有啥，一时想不起来……" class="headerlink" title="还有啥，一时想不起来……"></a>还有啥，一时想不起来……</h2><p>To be continued…</p>
]]></content>
      <categories>
        <category>技術</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>悅讀</tag>
      </tags>
  </entry>
  <entry>
    <title>Raspberry 配置 ASF</title>
    <url>/2020/03/04/Raspberry-ASF/</url>
    <content><![CDATA[<p>首先在國內網路下要保證配置好了代理服務 (參見之前的 Raspberry Hello)</p>
<p>ASF Git 頁面: <a href="https://github.com/JustArchiNET/ArchiSteamFarm" target="_blank" rel="noopener">https://github.com/JustArchiNET/ArchiSteamFarm</a></p>
<p>Setting up 頁面: <a href="https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Setting-up-zh-CN" target="_blank" rel="noopener">https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Setting-up-zh-CN</a></p>
<p>在 release 頁面下載相應壓縮檔, 一般來說選 linux-arm</p>
<h1 id="安裝相關依賴"><a href="#安裝相關依賴" class="headerlink" title="安裝相關依賴"></a>安裝相關依賴</h1><p>套件名稱取決於您正在使用的 Linux 發行版，我們已經列出了最常見的套件。 您可以使用本地套件管理系統，為您的作業系統取得全部套件（例如 Debian 的 <code>apt</code> 或 CentOS 的 <code>yum</code>）。</p>
<ul>
<li><code>libcurl</code>（<code>libcurl4</code>、<code>libcurl3</code>）</li>
<li><code>libicu</code>（您的 Linux 發行版的最新版本，例如 <code>libicu60</code>）</li>
<li><code>libkrb5-3</code>（<code>krb5-libs</code>）</li>
<li><code>liblttng-ust0</code>（<code>lttng-ust</code>）</li>
<li><code>libssl</code>（<code>libssl1.1</code>、<code>openssl-libs</code>、您的 Linux 發行版最新的 1.1.X 版本）</li>
<li><code>zlib1g</code>（<code>zlib</code>）</li>
</ul>
<p>其中至少應該有幾個套件已經可用於您的系統本地了（例如現今幾乎每一個 Linux 發行版都需要 <code>zlib1g</code>）。</p>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>在 <strong><a href="https://justarchinet.github.io/ASF-WebConfigGenerator" target="_blank" rel="noopener">網頁設定檔產生器</a></strong> 頁面配置一個 ASF 和一個 Bot</p>
<p>然後放入 config 資料夾中</p>
<p>修改權限 <code>chmod +x ArchiSteamFarm</code></p>
<p>然後 <code>./ArchiSteamFarm</code> 執行</p>
<p>若需要代理則在前面添加 <code>proxychains</code></p>
]]></content>
      <categories>
        <category>技術</category>
      </categories>
      <tags>
        <tag>樹莓派</tag>
      </tags>
  </entry>
  <entry>
    <title>Steam 藝術作品展示欄設定</title>
    <url>/2020/01/27/Steam-bg/</url>
    <content><![CDATA[<h2 id="分割個人資料背景"><a href="#分割個人資料背景" class="headerlink" title="分割個人資料背景"></a>分割個人資料背景</h2><p><a href="https://steam.design/" target="_blank" rel="noopener">https://steam.design/</a></p>
<h2 id="瀏覽器中上傳藝術作品"><a href="#瀏覽器中上傳藝術作品" class="headerlink" title="瀏覽器中上傳藝術作品"></a>瀏覽器中上傳藝術作品</h2><p>選擇圖片 - F12 - Console</p>
<pre><code>var num= document.getElementsByName(&quot;image_width&quot;)[0].value;
document.getElementsByName(&quot;image_height&quot;)[0].value = num-(num-1);
document.getElementsByName(&quot;image_width&quot;)[0].value= num*100;
</code></pre><p>然後上傳圖片</p>
<h2 id="上傳到熒幕截圖展櫃"><a href="#上傳到熒幕截圖展櫃" class="headerlink" title="上傳到熒幕截圖展櫃"></a>上傳到熒幕截圖展櫃</h2><pre><code>document.getElementsByName(&quot;file_type&quot;)[0].value= 5;
var num= document.getElementsByName(&quot;image_width&quot;)[0].value;
document.getElementsByName(&quot;image_height&quot;)[0].value = num-(num-1);
document.getElementsByName(&quot;image_width&quot;)[0].value= num*100;
</code></pre>]]></content>
      <categories>
        <category>技術</category>
      </categories>
      <tags>
        <tag>遊戲</tag>
      </tags>
  </entry>
  <entry>
    <title>Raspberry 基礎配置</title>
    <url>/2020/02/29/Raspberry-hello/</url>
    <content><![CDATA[<h1 id="寫入系統到存儲卡中"><a href="#寫入系統到存儲卡中" class="headerlink" title="寫入系統到存儲卡中"></a>寫入系統到存儲卡中</h1><p>在通電前, 要先把系統搞定</p>
<p>官方下載站: <a href="http://www.raspberrypi.org/downloads" target="_blank" rel="noopener">http://www.raspberrypi.org/downloads</a></p>
<p>格式化工具: SDFormatter</p>
<p>寫入工具: Win32DiskImager</p>
<p>注意寫入過程中不要點格式化</p>
<p>默認登入名為 pi, pw: raspberry</p>
<p>root pw: raspberry</p>
<h1 id="硬體裝配"><a href="#硬體裝配" class="headerlink" title="硬體裝配"></a>硬體裝配</h1><p>把主板從盒子取出來</p>
<p>插入裝有系統的存儲卡</p>
<p>連接電源, HDMI, 網綫, 鍵鼠</p>
<p>插入電源後即直接進入系統</p>
<h1 id="系統配備"><a href="#系統配備" class="headerlink" title="系統配備"></a>系統配備</h1><p>以下配備均是在官方系統下操作的</p>
<h2 id="root"><a href="#root" class="headerlink" title="root"></a>root</h2><p>由pi用戶登録後</p>
<pre><code>sudo passwd root

sudo passwd --unlock root
</code></pre><h2 id="更換為國內-source"><a href="#更換為國內-source" class="headerlink" title="更換為國內 source"></a>更換為國內 source</h2><pre><code>sudo nano /etc/apt/sources.list 
添加
deb http://mirrors.aliyun.com/raspbian/raspbian/ buster main contrib non-free rpi
deb-src http://mirrors.aliyun.com/raspbian/raspbian/ buster main contrib non-free rpi
更新
sudo apt-get update
</code></pre><h2 id="配置中文"><a href="#配置中文" class="headerlink" title="配置中文"></a>配置中文</h2><p>安裝中文字庫</p>
<pre><code>sudo apt-get install ttf-wqy-zenhei
</code></pre><p>輸入法</p>
<pre><code>sudo apt-get install fcitx fcitx-googlepinyin fcitx-module-cloudpinyin fcitx-sunpinyin
</code></pre><p>配置中文</p>
<p><code>sudo raspi-config</code> - <code>4 Localisation</code> - <code>I1 Change Locale</code></p>
<p>選擇 zh_CN GB2312, zh_CN.GB18030 GB18030, zh_CN.GBK GBK, zh_CN.UTF-8  UTF-8, zh_CN.UTF-8</p>
<p><code>Enter</code> - <code>sudo reboot</code></p>
<p>重啓後打開設置, Localisation - SetLocal - CharacterSet - GB18030 - OK</p>
<p>之後會提示重啓 - Yes</p>
<p>配置中文輸入法</p>
<p>Fcitx配置 - 左下角加好 - 選擇需要的</p>
<h2 id="固定-IP"><a href="#固定-IP" class="headerlink" title="固定 IP"></a>固定 IP</h2><pre><code>sudo nano /etc/dhcpcd.conf
</code></pre><p>然後自己看着辦</p>
<h2 id="開啓-SSH"><a href="#開啓-SSH" class="headerlink" title="開啓 SSH"></a>開啓 SSH</h2><p><code>sudo raspi-config</code> - <code>Interfacing Options</code> - <code>SSH</code></p>
<h2 id="系統備份-還原"><a href="#系統備份-還原" class="headerlink" title="系統備份, 還原"></a>系統備份, 還原</h2><p>在 Windows 下可以創建一個空的<code>.img</code>資料, 然後插入存儲卡, 使用 <code>Win32 Disk Imager</code> 的 <code>Read</code> 功能. 會將整張卡進行備份.</p>
<h2 id="配置代理服務"><a href="#配置代理服務" class="headerlink" title="配置代理服務"></a>配置代理服務</h2><h3 id="安裝-SS"><a href="#安裝-SS" class="headerlink" title="安裝 SS"></a>安裝 SS</h3><pre><code>sudo apt-get install shadowsocks
or
sudo pip install shadowsocks
</code></pre><p>配置 SS 參數</p>
<pre><code>sudo vi /etc/shadowsocks/config.json
{
    &quot;server&quot;: ,
    &quot;server_port&quot;: ,
    &quot;local_address&quot;: &quot;127.0.0.1&quot;,
    &quot;local_port&quot;: &quot;1080&quot;,
    &quot;password&quot;: ,
    &quot;timeout&quot;: 300,
    &quot;method&quot;: &quot;aes-256-cfb&quot;,
    &quot;fast_open&quot;: false,
    &quot;workers&quot;: 1
}
</code></pre><p>啓動</p>
<pre><code>apt-get
sudo /usr/bin/sslocal -c /etc/shadowsocks/config.json -d start

pip
sudo /usr/local/bin/sslocal -c /etc/shadowsocks/config.json -d start
</code></pre><p>開機啓動</p>
<pre><code>su
vim /etc/rc.local
最後的 exit 0 的上一行添加
sudo /usr/bin/sslocal -c /etc/shadowsocks/config.json -d start
</code></pre><p>不同方式安裝的 sslocal 位置可能不同, <code>which sslocal</code></p>
<h3 id="配置瀏覽器代理"><a href="#配置瀏覽器代理" class="headerlink" title="配置瀏覽器代理"></a>配置瀏覽器代理</h3><p>下載 SwitchyOmega <a href="https://github.com/FelisCatus/SwitchyOmega/releases" target="_blank" rel="noopener">https://github.com/FelisCatus/SwitchyOmega/releases</a> </p>
<p>打開瀏覽器拓展頁面 chrome://extensions 并拖入</p>
<p>若出現錯誤, 打開瀏覽器頁面右上角開發者模式, 然後解壓縮 release 的包, 瀏覽器中選擇加載已解壓的拓展</p>
<p><strong>配置 SwitchyOmega 的方法</strong></p>
<p>左側 proxy, 修改為 SOCKS5, 127.0.0.1, 1080</p>
<p>auto switch, 添加規則  <a href="https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt" target="_blank" rel="noopener">https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</a> </p>
<p><img src="http://www.phpvar.com/phpvar.com/wp-content/uploads/auto-switch-768x387.png" alt></p>
<h3 id="配置終端代理"><a href="#配置終端代理" class="headerlink" title="配置終端代理"></a>配置終端代理</h3><p>使用 proxychains 執行相應命令</p>
<pre><code>sudo apt install proxychains4
sudo vi /etc/proxychains.conf
最後一行添加
socks5 127.0.0.1 1080
并刪除多餘內容
proxychains curl www.google.com
</code></pre><h1 id="一些基本操作"><a href="#一些基本操作" class="headerlink" title="一些基本操作"></a>一些基本操作</h1><h2 id="Neofetch-顯示系統信息"><a href="#Neofetch-顯示系統信息" class="headerlink" title="Neofetch 顯示系統信息"></a>Neofetch 顯示系統信息</h2><pre><code>sudo apt-get install neofetch
neofetch
</code></pre><p>可以修改  <code>~/.config/neofetch/config.conf</code> 自定義輸出信息</p>
<h2 id="獲取溫度"><a href="#獲取溫度" class="headerlink" title="獲取溫度"></a>獲取溫度</h2><pre><code>cd /sys/class/thermal/thermal_zone0
cat temp
</code></pre><p>返回值除以 1000 即為當前 CPU 溫度</p>
<h2 id="設置時區"><a href="#設置時區" class="headerlink" title="設置時區"></a>設置時區</h2><p><code>date</code> 查詢系統時間</p>
<pre><code>sudo dpkg-reconfigure tzdata

Asia
</code></pre><p>樹莓派由於沒有電池, 斷電後無法保存時間, 默認通過 NTP 服務獲取時間, 如果時間不準確, 可以 <code>sudo ntpd -s –d</code> 來校準</p>
<p>也可以 <code>sudo date  --s=&quot;2018-10-19 14:54:00&quot;</code> 來設置時間</p>
]]></content>
      <categories>
        <category>技術</category>
      </categories>
      <tags>
        <tag>樹莓派</tag>
        <tag>計算機</tag>
      </tags>
  </entry>
  <entry>
    <title>一道情人節的密碼題</title>
    <url>/2018/08/17/Valentine-pw/</url>
    <content><![CDATA[<h2 id="七夕快樂哦"><a href="#七夕快樂哦" class="headerlink" title="七夕快樂哦"></a>七夕快樂哦</h2><p>今天是七夕呢，寫這個的起因是一個同學的女朋友發了個密碼解密給他。<br><img src="https://raw.githubusercontent.com/IsumiAlice/IsumiPic/master/20200410231059.jpg" alt><br>這就是今天要解決的問題嘍，當然，先把兩種密碼的相關知識貼上。</p>
<h2 id="凱撒密碼"><a href="#凱撒密碼" class="headerlink" title="凱撒密碼"></a>凱撒密碼</h2><p>在<a href="https://zh.wikipedia.org/wiki/%E5%AF%86%E7%A0%81%E5%AD%A6" title="密碼學" target="_blank" rel="noopener">密碼學</a>中，<strong>愷撒密碼</strong>（英語：Caesar cipher），或稱<strong>愷撒加密</strong>、<strong>愷撒變換</strong>、<strong>變換加密</strong>，是一種最簡單且最廣為人知的加密技術。它是一種<a href="https://zh.wikipedia.org/wiki/%E6%9B%BF%E6%8D%A2%E5%BC%8F%E5%AF%86%E7%A0%81" title="替換式密碼" target="_blank" rel="noopener">替換加密</a>的技術，<a href="https://zh.wikipedia.org/wiki/%E6%98%8E%E6%96%87" title="明文" target="_blank" rel="noopener">明文</a>中的所有字母都在<a href="https://zh.wikipedia.org/wiki/%E5%AD%97%E6%AF%8D%E8%A1%A8" title="字母表" target="_blank" rel="noopener">字母表</a>上向後（或向前）按照一個固定數目進行偏移後被替換成<a href="https://zh.wikipedia.org/wiki/%E5%AF%86%E6%96%87" title="密文" target="_blank" rel="noopener">密文</a>。例如，當偏移量是3的時候，所有的字母A將被替換成D，B變成E，以此類推。這個加密方法是以<a href="https://zh.wikipedia.org/wiki/%E7%BE%85%E9%A6%AC%E5%85%B1%E5%92%8C" title="羅馬共和" target="_blank" rel="noopener">羅馬共和</a>時期<a href="https://zh.wikipedia.org/wiki/%E6%81%BA%E6%92%92" title="愷撒" target="_blank" rel="noopener">愷撒</a>的名字命名的，當年愷撒曾用此方法與其將軍們進行聯繫。</p>
<p>愷撒密碼通常被作為其他更複雜的加密方法中的一個步驟，例如<a href="https://zh.wikipedia.org/wiki/%E7%BB%B4%E5%90%89%E5%B0%BC%E4%BA%9A%E5%AF%86%E7%A0%81" title="維吉尼亞密碼" target="_blank" rel="noopener">維吉尼亞密碼</a>。愷撒密碼還在現代的<a href="https://zh.wikipedia.org/wiki/ROT13" title="ROT13" target="_blank" rel="noopener">ROT13</a>系統中被應用。但是和所有的利用字母表進行替換的加密技術一樣，愷撒密碼非常容易被破解，而且在實際應用中也無法保證通信安全。</p>
<h2 id="柵欄密碼"><a href="#柵欄密碼" class="headerlink" title="柵欄密碼"></a>柵欄密碼</h2><p>所謂柵欄<a href="https://www.itsfun.com.tw/%E5%AF%86%E7%A2%BC/wiki-8783265-8437835" target="_blank" rel="noopener">密碼</a>，就是把要加密的明文分成N個一組，然後把每組的第i個字連起來，形成一段無規律的話。</p>
<p>一般比較常見的是2欄的棚欄密碼。<br>比如明文：THERE IS A CIPHER<br>去掉空格後變為：THEREISACIPHER<br>兩個一組，得到：TH ER EI SA CI PH ER<br>先取出第一個字母：TEESCPE<br>再取出第二個字母：HRIAIHR<br>連在一起就是：TEESCPEHRIAIHR<br>這樣就得到我們需要的密碼了！</p>
<p>而解密的時候，我們先吧<a href="https://www.itsfun.com.tw/%E5%AF%86%E6%96%87/wiki-4343875-4728655" target="_blank" rel="noopener">密文</a>從中間分開，變為兩行：<br>T E E S C P E<br>H R I A I H R<br>再按上下上下的順序組合起來：<br>THEREISACIPHER<br>分出<a href="https://www.itsfun.com.tw/%E7%A9%BA%E6%A0%BC/wiki-1130465-5262045" target="_blank" rel="noopener">空格</a>，就可以得到原文了：<br>THERE IS A CIPHER</p>
<h2 id="Python-簡單實現"><a href="#Python-簡單實現" class="headerlink" title="Python 簡單實現"></a>Python 簡單實現</h2><p>十幾行代碼，非常簡單。<br>後面的 for 循環部分應該還能再簡化一點。</p>
<pre><code class="python">import math
inp = &#39;cvpgygppjvtgpgfgjgtq&#39;
num = -2
step1 = [chr(97 + (ord(x)-97+num)%26) for x in inp]
print (step1)

num2 = 3
num3 = math.ceil(len(step1)/num2)
s2 = [step1[i*num3: (num3*(i+1)) if (num3*(i+1))&lt;len(step1) else len(step1)] for i in range(num2)]
print(s2)
s3 = []
for j in range(num3):
    for i in range(num2):
        try:
            s3.append(s2[i][j])
        except:
            pass
print (s3)
&#39;&#39;&#39;
and then there were none
&#39;&#39;&#39;
</code></pre>
]]></content>
      <categories>
        <category>技術</category>
      </categories>
  </entry>
  <entry>
    <title>使用 Windows 時經常遇到的問題</title>
    <url>/2020/03/10/Windows-puu/</url>
    <content><![CDATA[<h2 id="更換主機板"><a href="#更換主機板" class="headerlink" title="更換主機板"></a>更換主機板</h2><p>如果拆不下散熱器和主機板的螺絲，就用力一點！！！<br>主機板的電源綫要插牢固</p>
<h2 id="OneDrive-右鍵釋放空間"><a href="#OneDrive-右鍵釋放空間" class="headerlink" title="OneDrive 右鍵釋放空間"></a>OneDrive 右鍵釋放空間</h2><p>簡單的方法可以把使用者賬戶控制設為預設值<br><img src="https://raw.githubusercontent.com/IsumiAlice/IsumiPic/master/20200422002908.jpg" alt></p>
<p>如果上面的方法失敗：</p>
<ol>
<li>win+r -&gt; gpedit.msc 打開本機群組原則編輯器</li>
<li><img src="https://raw.githubusercontent.com/IsumiAlice/IsumiPic/master/20200422002548.jpg" alt></li>
<li>重啓</li>
</ol>
<h2 id="更換主硬盤遷移系統"><a href="#更換主硬盤遷移系統" class="headerlink" title="更換主硬盤遷移系統"></a>更換主硬盤遷移系統</h2><p>PartAssist.exe，很好用</p>
<h2 id="睡眠問題"><a href="#睡眠問題" class="headerlink" title="睡眠問題"></a>睡眠問題</h2><p>睡眠後螢幕關閉，但滑鼠亮著，機箱風扇也在工作</p>
<p>解決方法：把登録編輯程式的 AwayModeEnable 設定為 0</p>
<p>位置在：電腦\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Power</p>
<h2 id="如果Windows無法安裝到指定磁盤"><a href="#如果Windows無法安裝到指定磁盤" class="headerlink" title="如果Windows無法安裝到指定磁盤"></a>如果Windows無法安裝到指定磁盤</h2><ol>
<li>shift+F10</li>
<li>diskpart</li>
<li>list disk</li>
<li>select disk </li>
<li>Clean</li>
<li>若需要 convert mbr</li>
</ol>
<h2 id="卓越性能模式"><a href="#卓越性能模式" class="headerlink" title="卓越性能模式"></a>卓越性能模式</h2><p>管理員運行 Windows Powershell  </p>
<pre><code class="bash">powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61
</code></pre>
<h2 id="應用程式自啓動"><a href="#應用程式自啓動" class="headerlink" title="應用程式自啓動"></a>應用程式自啓動</h2><p> windows - 執行(run) - shell:startup - 確定 - 將要開機啓動的程式捷徑放入即可 </p>
<h2 id="禁用筆電自帶的鍵盤"><a href="#禁用筆電自帶的鍵盤" class="headerlink" title="禁用筆電自帶的鍵盤"></a>禁用筆電自帶的鍵盤</h2><ol>
<li>設備管理器</li>
<li>鍵盤-PS/2</li>
<li>右鍵-更新驅動</li>
<li>瀏覽計算機查找驅動</li>
<li>從計算機的驅動列表選擇</li>
<li>取消選擇-顯示兼容硬體</li>
<li>隨便選一個其他品牌驅動</li>
<li>是-重啓</li>
</ol>
]]></content>
      <categories>
        <category>技術</category>
      </categories>
      <tags>
        <tag>計算機</tag>
      </tags>
  </entry>
  <entry>
    <title>基於 Hexo 搭建個人靜態部落格</title>
    <url>/2018/01/29/hello-hexo/</url>
    <content><![CDATA[<h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><p>安裝<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a><br>更換爲國內源，安裝 cnpm</p>
<pre><code>$ npm config set registry https://registry.npm.taobao.org
$ npm config get registry

$ npm install -g cnpm
$ cmpm install hexo 
</code></pre><p>安裝<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a><br>安裝<a href="https://hexo.io/zh-tw/" target="_blank" rel="noopener">Hexo</a>  </p>
<pre><code class="bash">$ npm install -g hexo-cli
</code></pre>
<h2 id="建立"><a href="#建立" class="headerlink" title="建立"></a>建立</h2><p>一旦 Hexo 完成後，請執行下列指令，Hexo 會在指定資料夾中建立所有您需要的檔案。</p>
<pre><code class="bash">$ hexo init blog
$ cd blog
$ npm install
</code></pre>
<h3 id="建立一篇新的文章"><a href="#建立一篇新的文章" class="headerlink" title="建立一篇新的文章"></a>建立一篇新的文章</h3><pre><code class="bash">$ hexo new [layout] &lt;title&gt;
</code></pre>
<table>
<thead>
<tr>
<th>佈局</th>
<th>路徑</th>
</tr>
</thead>
<tbody>
<tr>
<td>post</td>
<td>source/_posts</td>
</tr>
<tr>
<td>page</td>
<td>source</td>
</tr>
<tr>
<td>draft</td>
<td>source/_drafts</td>
</tr>
</tbody>
</table>
<h3 id="產生靜態檔案"><a href="#產生靜態檔案" class="headerlink" title="產生靜態檔案"></a>產生靜態檔案</h3><pre><code class="bash">$ hexo generate
</code></pre>
<table>
<thead>
<tr>
<th>選項</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>-d, –deploy</td>
<td>產生完成即部署網站</td>
</tr>
<tr>
<td>-w, –watch</td>
<td>監看檔案變更</td>
</tr>
</tbody>
</table>
<h3 id="啟動伺服器"><a href="#啟動伺服器" class="headerlink" title="啟動伺服器"></a>啟動伺服器</h3><p>預設為 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p>
<pre><code class="bash">$ hexo server
</code></pre>
<h3 id="部署網站到Git"><a href="#部署網站到Git" class="headerlink" title="部署網站到Git"></a>部署網站到Git</h3><p>可以直接使用git命令部署，將 <code>public</code> 資料夾裏的文件複製到git目錄下，之後使用 <code>git commit</code></p>
<pre><code class="bash">$ hexo generate

$ git add .
$ git commit -m &quot;update&quot;
$ git push origin master
</code></pre>
<h3 id="Clean"><a href="#Clean" class="headerlink" title="Clean"></a>Clean</h3><pre><code class="bash">$ hexo clean
</code></pre>
<h3 id="列出網站資料"><a href="#列出網站資料" class="headerlink" title="列出網站資料"></a>列出網站資料</h3><pre><code class="bash">$ hexo list &lt;type&gt;
</code></pre>
<h3 id="顯示版本咨詢"><a href="#顯示版本咨詢" class="headerlink" title="顯示版本咨詢"></a>顯示版本咨詢</h3><pre><code class="bash">$ hexo version
</code></pre>
<h2 id="更換主題"><a href="#更換主題" class="headerlink" title="更換主題"></a>更換主題</h2><p>在 <code>themes</code> 資料夾內，新增一個資料夾，並修改 <code>_config.yml</code> 內的 <code>theme</code> 設定，即可切換主題</p>
<h2 id="渲染公式"><a href="#渲染公式" class="headerlink" title="渲染公式"></a>渲染公式</h2><p>更換 markdown 渲染引擎</p>
<pre><code>npm uninstall hexo-renderer-marked --save
npm install hexo-renderer-kramed --save
</code></pre><p>修改 node_modules/kramed/lib/rules/inline.js</p>
<p>注意註釋部分</p>
<pre><code>var inline = {
  // escape: /^\\([\\`*{}\[\]()#$+\-.!_&gt;])/,
  escape: /^\\([`*\[\]()#$+\-.!_&gt;])/,
  autolink: /^&lt;([^ &gt;]+(@|:\/)[^ &gt;]+)&gt;/,
  url: noop,
  html: /^&lt;!--[\s\S]*?--&gt;|^&lt;(\w+(?!:\/|[^\w\s@]*@)\b)*?(?:&quot;[^&quot;]*&quot;|&#39;[^&#39;]*&#39;|[^&#39;&quot;&gt;])*?&gt;([\s\S]*?)?&lt;\/\1&gt;|^&lt;(\w+(?!:\/|[^\w\s@]*@)\b)(?:&quot;[^&quot;]*&quot;|&#39;[^&#39;]*&#39;|[^&#39;&quot;&gt;])*?&gt;/,
  link: /^!?\[(inside)\]\(href\)/,
  reflink: /^!?\[(inside)\]\s*\[([^\]]*)\]/,
  nolink: /^!?\[((?:\[[^\]]*\]|[^\[\]])*)\]/,
  reffn: /^!?\[\^(inside)\]/,
  strong: /^__([\s\S]+?)__(?!_)|^\*\*([\s\S]+?)\*\*(?!\*)/,
  // em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,
  em: /^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,
  code: /^(`+)\s*([\s\S]*?[^`])\s*\1(?!`)/,
  br: /^ {2,}\n(?!\s*$)/,
  del: noop,
  text: /^[\s\S]+?(?=[\\&lt;!\[_*`$]| {2,}\n|$)/,
  math: /^\$\$\s*([\s\S]*?[^\$])\s*\$\$(?!\$)/,
};
</code></pre><p>在主題中開啓 mathjax</p>
<p>在 themes/xxx/_config.yml</p>
<p>一般</p>
<pre><code>math:
  enable: true
  per_page: true
  engine: mathjax
</code></pre><p>在需要渲染公式的文章的 Fornt-matter 中打開 mathjax</p>
<pre><code>---
mathjax: true
--
</code></pre>]]></content>
      <categories>
        <category>技術</category>
      </categories>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 youtube-dl 下載影片</title>
    <url>/2018/02/17/youtube-dl/</url>
    <content><![CDATA[<h2 id="youtube-dl常用命令"><a href="#youtube-dl常用命令" class="headerlink" title="youtube-dl常用命令"></a>youtube-dl常用命令</h2><p>得到視頻可下載格式列表：</p>
<pre><code>youtube-dl -F [url]
</code></pre><p>下載相應的視頻、音頻並合併：</p>
<pre><code>youtube-dl -f 299+140 xxxxxx
</code></pre><p>自動選擇碼率最高的視頻下載：</p>
<pre><code>youtube-dl -f xxxxxx
</code></pre><p>下載播放隊列：</p>
<pre><code>youtube-dl -f 299+140 -o &quot;%(playlist_index)s-%(title)s.%(ext)s&quot; --playlist-start 18 --playlist-end 27 PLVTne6k3-60uJC9V8o3CmGjBj8XreCcqR
</code></pre><h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><pre><code>pip install --upgrade youtube-dl
</code></pre><p>在<a href="https://link.jianshu.com/?t=https%3A%2F%2Fffmpeg.org%2Fdownload.html" target="_blank" rel="noopener">官方網站</a>下載 ffmpeg，解壓縮</p>
<p>環境變數<code>Path</code>中添加<code>ffmpeg\bin</code></p>
<pre><code>ffmpeg -version
</code></pre><hr>
<h2 id="VPS端-Linux-配置"><a href="#VPS端-Linux-配置" class="headerlink" title="VPS端(Linux)配置"></a>VPS端(Linux)配置</h2><h3 id="安裝-youtube-dl"><a href="#安裝-youtube-dl" class="headerlink" title="安裝 youtube-dl"></a>安裝 youtube-dl</h3><pre><code class="bash">sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl
sudo chmod a+rx /usr/local/bin/youtube-dl
</code></pre>
<h3 id="安裝-ffmpeg-稍稍稍稍複雜"><a href="#安裝-ffmpeg-稍稍稍稍複雜" class="headerlink" title="安裝 ffmpeg(稍稍稍稍複雜)"></a>安裝 ffmpeg(稍稍稍稍複雜)</h3><ul>
<li>安裝 <a href="http://yasm.tortall.net/Download.html" target="_blank" rel="noopener">yasm</a><pre><code class="bash">$ tar -xvzf yasm-1.3.0.tar.gz
$ cd yasm-1.3.0/
$ ./configure
$ make
$ make install
</code></pre>
</li>
<li>下載<a href="http://ffmpeg.org/" target="_blank" rel="noopener">ffmpeg</a>源碼，並傳入VPS<pre><code class="bash">$ tar -xjvf ffmpeg-3.3.1.tar.bz2
$ cd ffmpeg-3.3.1/
$ ./configure --enable-shared --prefix=/monchickey/ffmpeg
$ make
$ make install
</code></pre>
</li>
<li>配置一下<pre><code class="bash">$ vi /etc/ld.so.conf.d/ffmpeg.conf
添加 /monchickey/ffmpeg/lib 保存退出
$ ldconfig
$ cd /monchickey/ffmpeg/bin
$ ./ffmpeg -version 可查看版本號
$ vi /etc/profile
末尾添加 export PATH=&quot;/monchickey/ffmpeg/bin:$PATH&quot; 保存退出
$ source /etc/profile
</code></pre>
</li>
</ul>
<h2 id="本地下載VPS上的文件"><a href="#本地下載VPS上的文件" class="headerlink" title="本地下載VPS上的文件"></a>本地下載VPS上的文件</h2><ul>
<li>在VPS上開啟臨時HTTP服務器<pre><code class="bash">$ python -m SimpleHTTPServer
</code></pre>
</li>
<li>本地瀏覽器打開 <code>IP:8000</code></li>
<li>OK了，用瀏覽器愉快的下載相應文件吧</li>
<li>CTRL+C可關閉服務器</li>
<li>也可以<code>netstat -anp | grep 8000</code>查找相應進程如<code>3333/python</code>,然後通過<code>kill -9 3333</code>關閉進程</li>
</ul>
]]></content>
      <categories>
        <category>技術</category>
      </categories>
      <tags>
        <tag>計算機</tag>
      </tags>
  </entry>
</search>
