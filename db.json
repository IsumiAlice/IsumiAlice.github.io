{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/logo.png","path":"img/logo.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/clipboard-use.js","path":"js/clipboard-use.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/debouncer.js","path":"js/debouncer.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/lazyload.js","path":"js/lazyload.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1},{"_id":"themes/fluid/source/lib/hint/hint.min.css","path":"lib/hint/hint.min.css","modified":0,"renderable":1}],"Cache":[{"_id":"themes/fluid/.editorconfig","hash":"33218fbd623feb43edf5f99f15965392cecc44a6","modified":1597159344000},{"_id":"themes/fluid/.eslintrc","hash":"4bc2b19ce2b8c4d242f97d4ccf2d741e68ab0097","modified":1597159344000},{"_id":"themes/fluid/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1597159344000},{"_id":"themes/fluid/.gitignore","hash":"bd095eee271360a38772ee1a42d4f000fb722e5f","modified":1597159344000},{"_id":"themes/fluid/LICENSE","hash":"5b919c12e4f5f5cdebb7c17ded4f10f1ebe64811","modified":1597159344000},{"_id":"themes/fluid/README.md","hash":"0ff14201b4a4799d5e3b1387da8e06ead1681970","modified":1597159344000},{"_id":"themes/fluid/README_en.md","hash":"99412f14c91c3bc188953eb5b347481a618facd3","modified":1597159344000},{"_id":"themes/fluid/_config.yml","hash":"ec8a836495443daa91254e0c82a0682a4f805a08","modified":1598159782691},{"_id":"themes/fluid/_static_prefix.yml","hash":"5f1725837c8ad927b2c54eafc3019d80e0775051","modified":1598159495962},{"_id":"themes/fluid/gulpfile.js","hash":"dc82b6be72c786721a2f5e2acc10a2a94995c540","modified":1597159344000},{"_id":"themes/fluid/package.json","hash":"167c67c82a91dbc59a2feb88af1bf211b61256a0","modified":1597159344000},{"_id":"source/_posts/Arm-PL.md","hash":"2a0c74e54dba654c6a896200660bf2dba75babb7","modified":1598160121390},{"_id":"source/_posts/Raspberry-ASF.md","hash":"ab7fc06cdeafab73b8d262a8731f70fea59dd0ea","modified":1597763995351},{"_id":"source/_posts/Raspberry-hello.md","hash":"dbc50962ffee45e04c1f1fbacefc66a9a00f7e36","modified":1597764001145},{"_id":"source/_posts/Steam-bg.md","hash":"6a473a3fccf7ec753e596b6e039e4ab2a0c57f3e","modified":1597764007162},{"_id":"source/_posts/Valentine-pw.md","hash":"ac639f4e88f96201b964ec8d4d99523761ab8b5e","modified":1597764013643},{"_id":"source/_posts/Windows-puu.md","hash":"a488baee61bd854fbc1e355b879fb06668feccd6","modified":1597764022592},{"_id":"source/_posts/hello-hexo.md","hash":"9fa946fe9edfe1423bfeef6b3a69441d1542ad4a","modified":1597763925828},{"_id":"source/_posts/youtube-dl.md","hash":"67b15462d28bc818114d4a75dbecc71523840d30","modified":1597764026636},{"_id":"source/about/index.md","hash":"8f86eccd5fcd168d7b8f05e47b4bda7c81404729","modified":1598086312092},{"_id":"source/search/index.md","hash":"cb5979e017411d8c25373491448281cbd81fada1","modified":1597761487260},{"_id":"source/categories/index.md","hash":"8ac3a6cc59c76a3681bccd9f1dda6a0bc8ae3d78","modified":1597763850074},{"_id":"source/tags/index.md","hash":"13c8a91d957dddba6e8fbb77a36c57a1ea488a3e","modified":1597763819451},{"_id":"themes/fluid/languages/en.yml","hash":"a85dcc5cc21f9cab50df31e5001b8818ee62d1e2","modified":1597159344000},{"_id":"themes/fluid/languages/ja.yml","hash":"91020031a847c0361a6fd7ab990c7be4bf17529b","modified":1597159344000},{"_id":"themes/fluid/languages/zh-CN.yml","hash":"21307b4137c3d9b04bb58243747e75af0abc5a71","modified":1597159344000},{"_id":"themes/fluid/layout/404.ejs","hash":"689d9f4efd2a7f5edfd9b24561a7ade69d46617c","modified":1597159344000},{"_id":"themes/fluid/layout/about.ejs","hash":"e967e102bab2b35b9083165c2b8e037db8e0a32d","modified":1597159344000},{"_id":"themes/fluid/layout/archive.ejs","hash":"094357be1c2c6b477269a3f4b725d3c5dd24ef8c","modified":1597159344000},{"_id":"themes/fluid/layout/categories.ejs","hash":"3b8589675338c7b3e1849104b7bb15ac477fce4e","modified":1597159344000},{"_id":"themes/fluid/layout/category.ejs","hash":"1cfe94f46f1492a411d431b02a8d09c99cab77d5","modified":1597159344000},{"_id":"themes/fluid/layout/index.ejs","hash":"9534043275df504d70232c07fec7e10503b85d32","modified":1597159344000},{"_id":"themes/fluid/layout/layout.ejs","hash":"7eef318f19597fb51b33078a9d9a14a103c1d3f0","modified":1597159344000},{"_id":"themes/fluid/layout/links.ejs","hash":"6abd180ff4dd1d5d22e4c70328e3c7f83d174d9c","modified":1597159344000},{"_id":"themes/fluid/layout/page.ejs","hash":"8cab50ead4cdb992d35710147a9a5308fb5df290","modified":1597159344000},{"_id":"themes/fluid/layout/post.ejs","hash":"59551ef5d9c0dee8c162ac39a18a96dafe5e1358","modified":1597159344000},{"_id":"themes/fluid/layout/tag.ejs","hash":"fd72ec9e6629facf63ce8122f0fa8d492669fa6a","modified":1597159344000},{"_id":"themes/fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1597159344000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report.md","hash":"867ed2bb90863934b72b7586ec7c31abf9863182","modified":1597159344000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report_zh.md","hash":"5c5a5565bb13928bc92332d9b99b968673ea7dfb","modified":1597159344000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request.md","hash":"d3a3204d9bb2b43a69c9cb0be59bada8cb91e412","modified":1597159344000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request_zh.md","hash":"a413dc14e4737dbcaa8fb797d37f85121ede6551","modified":1597159344000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question.md","hash":"93cf5e1f1e0362adee0f63f4edcc7738cd4fc842","modified":1597159344000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question_zh.md","hash":"e24b470f7aa8044499a4f5e39634e5dc43899011","modified":1597159344000},{"_id":"themes/fluid/.github/workflows/limit.yaml","hash":"f8bd2edeb4424ee7a055b31583445d5d5dff91a4","modified":1597159344000},{"_id":"themes/fluid/.github/workflows/lint.yaml","hash":"628f8d7655fdba149f5a9b0232df5c3225eda9da","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/beian.ejs","hash":"4f3acc8dc822c85d0d778552a15875f71c0cd80a","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/footer.ejs","hash":"03defcd4409dce27447aa8dfe7ce41a2d47e373b","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/css.ejs","hash":"21964c2e5c68ee3806ef80465ef5de92174cdc3a","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/head.ejs","hash":"4359f8598a21b133d392f71772c3f9adb5de96a0","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/nav.ejs","hash":"70490c67b7313ae305d39331238232fe62f094f1","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/paginator.ejs","hash":"783eee847562ce14db8f723b4ae742fb69aaf620","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/post-meta.ejs","hash":"afa8b2d53452609a5ee7cf32ad5f00d5a80de72e","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/scripts.ejs","hash":"0d818a43079d9a2da12d9c974426d675cc0b66ea","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/search.ejs","hash":"cdd7919fa01f6ef7ccc09938d662ff3d77f5d999","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/statistics.ejs","hash":"920bc618d357d48d2b96f8758f6ae8f9488fc4d8","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/toc.ejs","hash":"3cf1d9b9032919d6b936e1f2410911df3b325670","modified":1597159344000},{"_id":"themes/fluid/scripts/events/index.js","hash":"36b137b75c76ff08523016dc8eac702f397d771b","modified":1597159344000},{"_id":"themes/fluid/scripts/filters/post-filter.js","hash":"6665f19fa30cbbe0853d8140a0832f8638538f89","modified":1597159344000},{"_id":"themes/fluid/scripts/generators/local-search.js","hash":"fc2c50405b771b06b7f6cfc4e9de97b992691555","modified":1597159344000},{"_id":"themes/fluid/scripts/generators/pages.js","hash":"01439b3d7abdeb5e51f810d784181c1d420be55d","modified":1597159344000},{"_id":"themes/fluid/scripts/helpers/page.js","hash":"d45dce23532c17367c7eb86b94afa8c9e40d16c6","modified":1597159344000},{"_id":"themes/fluid/scripts/helpers/url.js","hash":"99ab4551dc9c035abcc3bf4da5def2f63449d7ec","modified":1597159344000},{"_id":"themes/fluid/scripts/helpers/utils.js","hash":"9045f47c7a71aab39f16cffb3e3847b752c2e0f1","modified":1597159344000},{"_id":"themes/fluid/scripts/helpers/wordcount.js","hash":"e58d422eddb44c1be893f65f79f4c7feecfe6d5f","modified":1597159344000},{"_id":"themes/fluid/scripts/tags/button.js","hash":"48e1b46b4c34b79a128dda7a0592b43be47cf955","modified":1597159344000},{"_id":"themes/fluid/scripts/tags/checkbox.js","hash":"c131fb22805cec89d647e643299508487fc72576","modified":1597159344000},{"_id":"themes/fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1597159344000},{"_id":"themes/fluid/scripts/tags/label.js","hash":"d50f5aeb1a95adbc88cea9cca4a07165d6725408","modified":1597159344000},{"_id":"themes/fluid/scripts/tags/note.js","hash":"0886cfe3f8589671a1d289495e359c20a9908080","modified":1597159344000},{"_id":"themes/fluid/scripts/utils/join-path.js","hash":"629e7deb3955f750c1cfa6fc773f412e020fcef4","modified":1597159344000},{"_id":"themes/fluid/scripts/utils/object.js","hash":"61e9555f99edcb23d55361c7154e23af33153ecb","modified":1597159344000},{"_id":"themes/fluid/source/css/main.styl","hash":"d5a8a59c8d1fd17d699a951e59c4ce9ae44c419d","modified":1597159344000},{"_id":"themes/fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1597159344000},{"_id":"themes/fluid/source/img/default.png","hash":"7bb2b8ee07db305bcadee2985b81b942027ae940","modified":1597159344000},{"_id":"themes/fluid/source/img/favicon.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1597159344000},{"_id":"themes/fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1597159344000},{"_id":"themes/fluid/source/img/logo.png","hash":"6f50b865f24c19ef88205f76c3cc9b83246dd841","modified":1598086665308},{"_id":"themes/fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1597159344000},{"_id":"themes/fluid/source/js/clipboard-use.js","hash":"f0ffe3df1deeb3cc36adfee2ab839368fb28d1c9","modified":1597159344000},{"_id":"themes/fluid/source/js/color-schema.js","hash":"8728594f7dbbd18467aed378a4696b2805686903","modified":1597159344000},{"_id":"themes/fluid/source/js/debouncer.js","hash":"045f324777bdfb99d4c17b1806169f029f897a65","modified":1597159344000},{"_id":"themes/fluid/source/js/lazyload.js","hash":"792deca48c12512d3e612f0de092ffcff3ca3e34","modified":1597159344000},{"_id":"themes/fluid/source/js/local-search.js","hash":"13d5ef2fe68c49bd6096781034dbb26c190b5176","modified":1597159344000},{"_id":"themes/fluid/source/js/main.js","hash":"a6def6368d288892088f78fd401e7170e3e81a13","modified":1597159344000},{"_id":"themes/fluid/source/js/utils.js","hash":"9b06e2e2a2bb92e27d15a700f28f880317c25cfa","modified":1597159344000},{"_id":"themes/fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/comments/changyan.ejs","hash":"13c0b62854668fd83287dff3792997baeeb3a2c7","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/comments/disqus.ejs","hash":"f6b7af1cd9f5a9971a5c769075d001e2161da367","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/comments/gitalk.ejs","hash":"096fef408349db4ebbec84cf20a373dd46c8f4ff","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/comments/livere.ejs","hash":"f1e5d89cc98e2f6e067e5cd3db728127ccff0105","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/comments/utterances.ejs","hash":"f151bc3453a67213cfdcb944c23764fb3a780722","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/comments/valine.ejs","hash":"37941b3c6f66f1f22aeff734802373657dfdfb99","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/plugins/analytics.ejs","hash":"0977e642c65e34d2ca2980a77b16d9ad2d3936fc","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/plugins/anchor.ejs","hash":"3738c2ef427b4b400225b92e638a17b7ab2125ed","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/plugins/aplayer.ejs","hash":"e843cdbe64af3dee9385eb1d763539d3ac10ed72","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/plugins/fancybox.ejs","hash":"c447e35c93c61a70c1c2dfc34948615832989660","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/plugins/daovoice.ejs","hash":"cfc684ba48608abd25afd155ee373d9936bbe84e","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/plugins/leancloud.ejs","hash":"7807e58722dcf992fba11bc879b0fac0e904dc76","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/plugins/math.ejs","hash":"76c4e0608ae362a265ac5e9c0fc49f75c1bc568e","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/plugins/local-search.ejs","hash":"03b024c7bab51b64e5187c9dbfac039d020f1e97","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/plugins/mermaid.ejs","hash":"10ed1f9a611449d37736e17c4e251127b38b3772","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/plugins/mouse-click.ejs","hash":"eb19991199c201ceb103a6ef025e4dfd1e7dbfb7","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/plugins/tocjs.ejs","hash":"2d35295dba2bb912d6ce2ec7747af06bfdc82edb","modified":1597159344000},{"_id":"themes/fluid/layout/_partial/plugins/typed.ejs","hash":"38334350425008d1f64323de221457ee0948af0e","modified":1597159344000},{"_id":"themes/fluid/scripts/events/lib/footnote.js","hash":"3b2abc5f5e3b681874637e98e047dc4969eb1983","modified":1597159344000},{"_id":"themes/fluid/scripts/events/lib/hello.js","hash":"da4c281a8b2d2ed813da1236950c9dff87334adc","modified":1597159344000},{"_id":"themes/fluid/scripts/events/lib/highlight.js","hash":"4adf895fa1157aaf5a194f8b760332b6215656ef","modified":1597159344000},{"_id":"themes/fluid/scripts/events/lib/lazyload.js","hash":"ee7dfef805af96195c11223cca53983deace8bda","modified":1597159344000},{"_id":"themes/fluid/scripts/events/lib/merge-configs.js","hash":"a191fbf01f0266ac47f0198159f68f4b8ebb81be","modified":1597159344000},{"_id":"themes/fluid/scripts/events/lib/version.js","hash":"ea5f0baa30d6f768febde5f2fb4cf17d280a2adc","modified":1597159344000},{"_id":"themes/fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1597159344000},{"_id":"themes/fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1597159344000},{"_id":"themes/fluid/source/css/_variables/base.styl","hash":"1678c5bbb1aa2e17681f8e88776ecb802bc85b69","modified":1597159344000},{"_id":"themes/fluid/source/lib/hint/hint.min.css","hash":"b38df228460ebfb4c0b6085336ee2878fe85aafe","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_category/category.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_about/about.styl","hash":"15d2786d00418e61022475194ad76445d68e27ea","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_archive/archive.styl","hash":"6e6f22b664199772370b59ce1678b0c148b5849f","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_base/base.styl","hash":"aa2528e71c290dc43b69dfbdcf4d8d6c258015a4","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_base/color-schema.styl","hash":"7231920523d634670344a452908f933b29a452be","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_base/inline.styl","hash":"fab8441a0b8d8f9db6c8370013659c035345ae79","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_base/rewrite.styl","hash":"439fce1b41bc1134399e7f2ce6ffe5aa64568acd","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_category/categories.styl","hash":"1ab7db37c2f7dc7ccdb994dcb41c16a4c8920397","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_index/index.styl","hash":"c443551deb389102e65cbb2441f60e8c20712ee8","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_links/links.styl","hash":"cd4ebb1426abed9fda93b797b02c6d5dd71dc2a1","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_post/post.styl","hash":"f8f5503443f26354dacd139606e245f19aceb4a0","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_post/tag_plugin.styl","hash":"cbb49a17fcc030029f0c2fbe1e056613109d1ecc","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/banner.styl","hash":"5f8738c43539c27ad2ce7635a53b2cac522f1c13","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/board.styl","hash":"32d90bcc8bf2fd5d8d78e86a567973d4b69bcfa1","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footer.styl","hash":"6b8340a41afc6b6e5f30dc9e912a0e0265446963","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/copy-btn.styl","hash":"2c9e05a354d4be820646a1c99f814740f299ed37","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/header.styl","hash":"7c8170d0e2de47570fe8ed523f10ee1c33138a9f","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"fe74d031acef4403e1510d4cce5bc7accd641780","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"f1cd98a5b8d98535d707a99dba6a00f1f3978c81","modified":1597159344000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1597159344000},{"_id":"source/_posts/2018-01-29-hello-hexo.md","hash":"4c1fd8cc9f6be50dce6e743b5332105eb183f197","modified":1598161516395},{"_id":"source/_posts/2018-08-17-Valentine-pw.md","hash":"1824fae723e966acdeeb4f755655dd0aba392507","modified":1598161458861},{"_id":"source/_posts/2020-04-19-Arm-PL.md","hash":"d6e83bf4783b5a55d3f903065e190ba2cc2ac453","modified":1598160971416},{"_id":"public/content.json","hash":"43876d95832ec4ff0f24f3c9eac52036fca54504","modified":1598161540942},{"_id":"public/search.xml","hash":"c274edc349adb3be76b045e0bdfa7c307545ce2f","modified":1598161540943},{"_id":"public/atom.xml","hash":"d2b141a2bdafd8725d60bdb62f6c9e8c11d400fc","modified":1598161541169},{"_id":"public/local-search.xml","hash":"fdd2040278c35166d062f1be91bcd862fc6c7e0c","modified":1598161541224},{"_id":"public/about/index.html","hash":"8abc139f15ae59e45c26e7492ef460256eeed769","modified":1598161541235},{"_id":"public/tags/index.html","hash":"fbcfeb968a54153774cde23de4d0ab806416c8df","modified":1598161541235},{"_id":"public/search/index.html","hash":"7c3c0a19efaa14848f192204720f9bc2b9f88040","modified":1598161541243},{"_id":"public/categories/index.html","hash":"768d9a43fced2399503c4dac1b27bf8d6a7849d6","modified":1598161541245},{"_id":"public/archives/index.html","hash":"5326d68569ca0f11f43a39084de53b69645b5ab7","modified":1598161541245},{"_id":"public/archives/2018/index.html","hash":"124d5a6f4259e21e71b3c302da01004c8b55c9f4","modified":1598161541246},{"_id":"public/archives/2018/01/index.html","hash":"18ad2bd84b2c7f45357ad4336a083f8780882e81","modified":1598161541246},{"_id":"public/archives/2018/08/index.html","hash":"40a110a3c557b364224f63afa5c889f8a792368f","modified":1598161541246},{"_id":"public/archives/2020/index.html","hash":"5fd76dfac525000bbc200bee09eb4b6de585459a","modified":1598161541246},{"_id":"public/archives/2020/04/index.html","hash":"5fd76dfac525000bbc200bee09eb4b6de585459a","modified":1598161541246},{"_id":"public/categories/技術/index.html","hash":"ab5be033348a5e5e5f626d77c7209dec5a23f25e","modified":1598161541246},{"_id":"public/tags/數學/index.html","hash":"c2d02fa423ba44f151fd3793e1a24bb1620bc783","modified":1598161541246},{"_id":"public/tags/高效能運算/index.html","hash":"4ab762affc3c872bc9e77750088083d633726564","modified":1598161541246},{"_id":"public/tags/Web/index.html","hash":"96aa17e83096974900e500d2d213e01e81810355","modified":1598161541246},{"_id":"public/tags/演算法/index.html","hash":"14cc8cfd653c7834ab9807829982a81644e41f0b","modified":1598161541246},{"_id":"public/index.html","hash":"7f723088cd7c06f18e6ed2ee55c644bc34142aa7","modified":1598161541247},{"_id":"public/404.html","hash":"413fdc5c96b9d1a3aeddc5f894c2be64b0bff5fa","modified":1598161541247},{"_id":"public/2020/04/19/2020-04-19-Arm-PL/index.html","hash":"1f8be34782adff944c45451455cb3a71bcdca702","modified":1598161541248},{"_id":"public/2018/08/17/2018-08-17-Valentine-pw/index.html","hash":"a661f03e4e394219096ee9a852dece780a31c96d","modified":1598161541248},{"_id":"public/2018/01/29/2018-01-29-hello-hexo/index.html","hash":"74b9937097b144e0cf1756af47b2a2aed45862e0","modified":1598161541248},{"_id":"public/links/index.html","hash":"0fb8530f771aeded31196978b2a028a5f6289c92","modified":1598161541251},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1598161541251},{"_id":"public/img/favicon.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1598161541251},{"_id":"public/img/default.png","hash":"7bb2b8ee07db305bcadee2985b81b942027ae940","modified":1598161541251},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1598161541251},{"_id":"public/img/logo.png","hash":"6f50b865f24c19ef88205f76c3cc9b83246dd841","modified":1598161541251},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1598161541252},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1598161541252},{"_id":"public/js/clipboard-use.js","hash":"f0ffe3df1deeb3cc36adfee2ab839368fb28d1c9","modified":1598161541668},{"_id":"public/js/lazyload.js","hash":"792deca48c12512d3e612f0de092ffcff3ca3e34","modified":1598161541668},{"_id":"public/js/color-schema.js","hash":"8728594f7dbbd18467aed378a4696b2805686903","modified":1598161541668},{"_id":"public/js/local-search.js","hash":"13d5ef2fe68c49bd6096781034dbb26c190b5176","modified":1598161541668},{"_id":"public/js/main.js","hash":"a6def6368d288892088f78fd401e7170e3e81a13","modified":1598161541669},{"_id":"public/js/utils.js","hash":"9b06e2e2a2bb92e27d15a700f28f880317c25cfa","modified":1598161541669},{"_id":"public/js/debouncer.js","hash":"045f324777bdfb99d4c17b1806169f029f897a65","modified":1598161541669},{"_id":"public/lib/hint/hint.min.css","hash":"b38df228460ebfb4c0b6085336ee2878fe85aafe","modified":1598161541669},{"_id":"public/css/main.css","hash":"986c13d4282a28fe7b9006c7c5c7b5438e157646","modified":1598161541669}],"Category":[{"name":"技術","_id":"cke6ndi3w00021wk2i2cb18tl"}],"Data":[],"Page":[{"title":"about me","date":"2020-06-16T15:27:43.000Z","layout":"about","_content":"\n![]( https://gitee.com/IsumiAlice/IsumiPic/raw/master/2005/20200517134352.jpg)\n\n---\n\n社畜, 宅男, 站着尿尿神教教主\n\n會許多數學的計算機碩士\n\n圖形學, 高效能運算, 基礎數學, 機器學習\n\n目前在深圳划水\n\n前端知識基本為〇, 所以本部落格大部分都是照搬他人的程式碼\n\n喜歡遊戲, 小說, 甜食, 宇宙, 美少女\n\n最近愛上了刷馬桶和做三分鐘咖喱\n\n夢想是和外星美少女戀愛\n\n郵箱：isumialice@foxmail.com\n\nQQ：1261492496\n\n---\n\n### 部落格大事記\n\n**2020-8-18**\n\n將原程式碼上傳到 source 分支  \n由於大部分技術內容都放到 yuque 上了  \n所以這個部落格以後就發些作品截圖和胡言亂語\n\n**2020-6-17**\n\n重新回到 Hexo + Sakura 的靜態頁面\n\n**2020-4-1**\n\n將技術相關的內容轉移到了 yuque 知識庫上：https://www.yuque.com/isumiai\n\n","source":"about/index.md","raw":"---\ntitle: about me\ndate: 2020-6-16 23:27:43\nlayout: about\n# cover: https://gitee.com/IsumiAlice/IsumiPic/raw/master///20200515204633.jpg\n---\n\n![]( https://gitee.com/IsumiAlice/IsumiPic/raw/master/2005/20200517134352.jpg)\n\n---\n\n社畜, 宅男, 站着尿尿神教教主\n\n會許多數學的計算機碩士\n\n圖形學, 高效能運算, 基礎數學, 機器學習\n\n目前在深圳划水\n\n前端知識基本為〇, 所以本部落格大部分都是照搬他人的程式碼\n\n喜歡遊戲, 小說, 甜食, 宇宙, 美少女\n\n最近愛上了刷馬桶和做三分鐘咖喱\n\n夢想是和外星美少女戀愛\n\n郵箱：isumialice@foxmail.com\n\nQQ：1261492496\n\n---\n\n### 部落格大事記\n\n**2020-8-18**\n\n將原程式碼上傳到 source 分支  \n由於大部分技術內容都放到 yuque 上了  \n所以這個部落格以後就發些作品截圖和胡言亂語\n\n**2020-6-17**\n\n重新回到 Hexo + Sakura 的靜態頁面\n\n**2020-4-1**\n\n將技術相關的內容轉移到了 yuque 知識庫上：https://www.yuque.com/isumiai\n\n","updated":"2020-08-22T08:51:52.092Z","path":"about/index.html","comments":1,"_id":"cke6ndi4w00111wk235vn7vrc","content":"<p><img src=\"https://gitee.com/IsumiAlice/IsumiPic/raw/master/2005/20200517134352.jpg\" srcset=\"/img/loading.gif\" alt></p>\n<hr>\n<p>社畜, 宅男, 站着尿尿神教教主</p>\n<p>會許多數學的計算機碩士</p>\n<p>圖形學, 高效能運算, 基礎數學, 機器學習</p>\n<p>目前在深圳划水</p>\n<p>前端知識基本為〇, 所以本部落格大部分都是照搬他人的程式碼</p>\n<p>喜歡遊戲, 小說, 甜食, 宇宙, 美少女</p>\n<p>最近愛上了刷馬桶和做三分鐘咖喱</p>\n<p>夢想是和外星美少女戀愛</p>\n<p>郵箱：isumialice@foxmail.com</p>\n<p>QQ：1261492496</p>\n<hr>\n<h3 id=\"部落格大事記\"><a href=\"#部落格大事記\" class=\"headerlink\" title=\"部落格大事記\"></a>部落格大事記</h3><p><strong>2020-8-18</strong></p>\n<p>將原程式碼上傳到 source 分支<br>由於大部分技術內容都放到 yuque 上了<br>所以這個部落格以後就發些作品截圖和胡言亂語</p>\n<p><strong>2020-6-17</strong></p>\n<p>重新回到 Hexo + Sakura 的靜態頁面</p>\n<p><strong>2020-4-1</strong></p>\n<p>將技術相關的內容轉移到了 yuque 知識庫上：<a href=\"https://www.yuque.com/isumiai\" target=\"_blank\" rel=\"noopener\">https://www.yuque.com/isumiai</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://gitee.com/IsumiAlice/IsumiPic/raw/master/2005/20200517134352.jpg\" srcset=\"/img/loading.gif\" alt></p>\n<hr>\n<p>社畜, 宅男, 站着尿尿神教教主</p>\n<p>會許多數學的計算機碩士</p>\n<p>圖形學, 高效能運算, 基礎數學, 機器學習</p>\n<p>目前在深圳划水</p>\n<p>前端知識基本為〇, 所以本部落格大部分都是照搬他人的程式碼</p>\n<p>喜歡遊戲, 小說, 甜食, 宇宙, 美少女</p>\n<p>最近愛上了刷馬桶和做三分鐘咖喱</p>\n<p>夢想是和外星美少女戀愛</p>\n<p>郵箱：isumialice@foxmail.com</p>\n<p>QQ：1261492496</p>\n<hr>\n<h3 id=\"部落格大事記\"><a href=\"#部落格大事記\" class=\"headerlink\" title=\"部落格大事記\"></a>部落格大事記</h3><p><strong>2020-8-18</strong></p>\n<p>將原程式碼上傳到 source 分支<br>由於大部分技術內容都放到 yuque 上了<br>所以這個部落格以後就發些作品截圖和胡言亂語</p>\n<p><strong>2020-6-17</strong></p>\n<p>重新回到 Hexo + Sakura 的靜態頁面</p>\n<p><strong>2020-4-1</strong></p>\n<p>將技術相關的內容轉移到了 yuque 知識庫上：<a href=\"https://www.yuque.com/isumiai\" target=\"_blank\" rel=\"noopener\">https://www.yuque.com/isumiai</a></p>\n"},{"title":"tags","date":"2020-08-18T15:16:56.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"title: tags\ndate: 2020-8-18 23:16:56\ntype: \"tags\"\n---\n","updated":"2020-08-18T15:16:59.451Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cke6ndi4y00121wk2chl84xwt","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"search","comments":0,"type":"search","_content":"","source":"search/index.md","raw":"---\ntitle: search\ncomments: false\ntype: \"search\"\n---\n","date":"2020-08-18T14:44:33.551Z","updated":"2020-08-18T14:38:07.260Z","path":"search/index.html","layout":"page","_id":"cke6ndi5000131wk29sueq3wj","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2020-08-18T15:17:29.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"title: categories\ndate: 2020-8-18 23:17:29\ntype: \"categories\"\n---\n","updated":"2020-08-18T15:17:30.074Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cke6ndi5000141wk2ce0e17je","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Arm PL 環境配置","date":"2020-04-19T13:51:50.000Z","index_img":"https://gitee.com/IsumiAlice/IsumiPic/raw/master///20200515204625.jpg","banner_img":"https://gitee.com/IsumiAlice/IsumiPic/raw/master///20200515204625.jpg","_content":"在 CentOS 下配置 Arm 高效能運算庫\n<!-- more -->\nArm Performance Libraries 作為 Linux 的 Arm Compiler 的一部分安裝，並且需要 Arm Allinea Studio 許可證\n## License\n\nArm Allinea Studio 工具套件為在 Arm 硬體上開發 HPC 應用程式提供了完整的解決方案。 它包括： \n- Arm C/C ++/Fortran 編譯器 \n- ArmPL \n- Arm Forge（Arm DDT，Arm MAP和Arm Performance Reports） \n\n需要許可證來使用這些工具。 有兩種許可證， Named User 和 Floating\n\n在獲得許可證後，按照以下說明將其新增到系統中： \n\n### Add a named user license \n\n1. 在 `/opt/arm/` 目錄中建立一個名為 licenses 的目錄 \n2. 將許可證檔案複製到 `/opt/arm/licenses` 目錄；如果選擇將許可證檔案放在其他位置，則必須將 `ARM_LICENSE_DIR` 環境變數設定為指向它 `export ARM_LICENSE_DIR=/opt/arm/licenses`\n3. Arm Forge 和 Arm Performance Reports 在其特定的安裝目錄中搜索許可證。如果使用的是 Arm Allinea Studio 許可證，並且沒有為這些工具使用單獨的許可證，請設定 `ALLINEA_LICENSE_DIR` 環境變數以將這些工具指向您的 Arm Allinea Studio 許可證 `export ALLINEA_LICENSE_DIR=/opt/arm/licenses >`\n\nnamed user license，無需安裝Arm License Server\n\n### Setting up a floating license \n\n必須下載並安裝 [Arm License Server](https://developer.arm.com/tools-and-software/server-and-hpc/downloads/arm-licence-server) \n\n浮動許可證由伺服器許可證檔案和客戶端許可證檔案組成，在[這裡](https://www.arm.com/products/development-tools/server-and-hpc/allinea-studio/get-software?_ga=2.43607085.960219704.1587365001-756695113.1577670013)申請 \n\n檢查客戶端許可證是否包含執行Arm License Server的計算機的主機名或IP地址 \n\n1. 將客戶端許可證新增到安裝 Arm Allinea Studio 的計算機上。在 `/opt/arm` 目錄中建立一個名為 `licenses` 的目錄 \n2. 同 named \n3. 同 named \n4. 將伺服器許可證檔案新增到安裝 Arm License Server 的計算機上。在 `/opt/arm/licenceserver` 目錄中建立一個名為 `licenses` 的目錄，並將您的許可證檔案複製到該目錄中 \n5. 重新啟動 Arm License Server \n\n## 下載 \n\n[Arm Allinea Studio downloads page](https://developer.arm.com/products/software-development-tools/hpc/arm-allinea-studio/download) \n\n## 安裝 \n\n需要 python >= 2.7\n\n需要 C Libraries：SUSE and RHEL: `glibc-devel` Ubuntu: `libc6-dev` \n\n1. 解壓縮 ``` tar -xvf .tar.gz ``` \n2. ``` cd ``` \n3. 預設配置安裝 ``` sudo ./.sh ``` \n可以自定義 options\n4. 安裝程式將顯示EULA並提示您同意條款 接下來主要介紹 ArmPL 的配置和使用 \n\n\n## 配置 \n1. 檢視可用的環境模組 ``` module avail ``` 可能需要配置MODULEPATH環境變數以包含安裝目錄 ``` export MODULEPATH=$MODULEPATH:/opt/arm/modulefiles/ ``` \n2. 為您使用的編譯器載入適當的模組，如果使用的是用於Linux的Arm Compiler，則建議僅載入編譯器模組，如果使用gcc，則必須載入所需的特定Arm Performance Libraries模組 \n   ``` module load Generic-AArch64/RHEL/7/arm-linux-compiler/20.0 ``` \n   如果使用gcc編譯器，請確保載入正確的模組   \n   ``` module load Generic-AArch64/RHEL/7/gcc-9.2.0/armpl/20.0.0 ```   \n   Tips: 可以考慮將模組載入命令新增到您的.profile中，以在每次登入時自動執行它 \n3. 根據使用的編譯器，使用以下命令檢查環境 \n\n| Compiler | Command |\n| ------------ | ---------------- |\n| armclang | `which armclang` |\n| gcc | `which gcc` |\n\n## 舉個例子 \n\nArmPL 包含許多示例程式，如果是預設安裝的，位置在`/opt/arm//examples/` \n\n這裡以 `fftw_dft_r2c_1d_c_example.c` 為例，具體做什麼就不看了 \n\n編譯和連結的選項： \n-armpl: 與arm編譯器進行編譯和連結時 \n-mcpu = native: 允許編譯器從主機系統推斷要使用的庫 \n-L\\lib: 新增庫搜尋路徑 \n-larmpl_lp64: 連結到Arm Performance Libraries \n-lgfortran: 連結到 gcc Fortran 執行庫 \n-lm: 連結到標準數學庫 \n\n1. 編譯原始碼，生成一個目標檔案 \n\n| **Compiler** | **Command** |\n| ------------ | ------------------------ |\n| armclang | `armclang -c -armpl -mcpu=native fftw_dft_r2c_1d_c_example.c -o fftw_dft_r2c_1d_c_example.o` |\n| gcc | `gcc -c -I/include fftw_dft_r2c_1d_c_example.c -o fftw_dft_r2c_1d_c_example.o` |\n2. 將目的碼連結到可執行檔案中 \n\n| **Compiler** | **Command** |\n| ------------ | ------------------------- |\n| armclang | `armclang fftw_dft_r2c_1d_c_example.o -o fftw_dft_r2c_1d_c_example.exe -armpl -mcpu=native -lm` |\n| gcc | `gcc fftw_dft_r2c_1d_c_example.o -L/lib -o fftw_dft_r2c_1d_c_example.exe -larmpl_lp64 -lgfortran -lm` |\n\n3. 在Arm系統上執行可執行檔案 ``` ./fftw_dft_r2c_1d_c_example.exe ``` \n   可以看到相應的輸出 \n\n## Compile and test the examples examples \n\n目錄包含以下內容： \n- 一個GNUmakefile，用於生成和執行所有示例程式 \n- C 原始碼 .c \n- Fortran原始碼 .f90 \n- 每個示例的預期輸出 .expected \n\nMakefile編譯並執行每個示例，然後將生成的輸出與預期的輸出進行比較。任何差異都會標記為錯誤\n","source":"_posts/2020-04-19-Arm-PL.md","raw":"---\ntitle: Arm PL 環境配置\ndate: 2020-04-19 21:51:50\ncategories: \n - 技術\ntags: \n - 數學\n - 高效能運算\nindex_img: https://gitee.com/IsumiAlice/IsumiPic/raw/master///20200515204625.jpg\nbanner_img: https://gitee.com/IsumiAlice/IsumiPic/raw/master///20200515204625.jpg\n---\n在 CentOS 下配置 Arm 高效能運算庫\n<!-- more -->\nArm Performance Libraries 作為 Linux 的 Arm Compiler 的一部分安裝，並且需要 Arm Allinea Studio 許可證\n## License\n\nArm Allinea Studio 工具套件為在 Arm 硬體上開發 HPC 應用程式提供了完整的解決方案。 它包括： \n- Arm C/C ++/Fortran 編譯器 \n- ArmPL \n- Arm Forge（Arm DDT，Arm MAP和Arm Performance Reports） \n\n需要許可證來使用這些工具。 有兩種許可證， Named User 和 Floating\n\n在獲得許可證後，按照以下說明將其新增到系統中： \n\n### Add a named user license \n\n1. 在 `/opt/arm/` 目錄中建立一個名為 licenses 的目錄 \n2. 將許可證檔案複製到 `/opt/arm/licenses` 目錄；如果選擇將許可證檔案放在其他位置，則必須將 `ARM_LICENSE_DIR` 環境變數設定為指向它 `export ARM_LICENSE_DIR=/opt/arm/licenses`\n3. Arm Forge 和 Arm Performance Reports 在其特定的安裝目錄中搜索許可證。如果使用的是 Arm Allinea Studio 許可證，並且沒有為這些工具使用單獨的許可證，請設定 `ALLINEA_LICENSE_DIR` 環境變數以將這些工具指向您的 Arm Allinea Studio 許可證 `export ALLINEA_LICENSE_DIR=/opt/arm/licenses >`\n\nnamed user license，無需安裝Arm License Server\n\n### Setting up a floating license \n\n必須下載並安裝 [Arm License Server](https://developer.arm.com/tools-and-software/server-and-hpc/downloads/arm-licence-server) \n\n浮動許可證由伺服器許可證檔案和客戶端許可證檔案組成，在[這裡](https://www.arm.com/products/development-tools/server-and-hpc/allinea-studio/get-software?_ga=2.43607085.960219704.1587365001-756695113.1577670013)申請 \n\n檢查客戶端許可證是否包含執行Arm License Server的計算機的主機名或IP地址 \n\n1. 將客戶端許可證新增到安裝 Arm Allinea Studio 的計算機上。在 `/opt/arm` 目錄中建立一個名為 `licenses` 的目錄 \n2. 同 named \n3. 同 named \n4. 將伺服器許可證檔案新增到安裝 Arm License Server 的計算機上。在 `/opt/arm/licenceserver` 目錄中建立一個名為 `licenses` 的目錄，並將您的許可證檔案複製到該目錄中 \n5. 重新啟動 Arm License Server \n\n## 下載 \n\n[Arm Allinea Studio downloads page](https://developer.arm.com/products/software-development-tools/hpc/arm-allinea-studio/download) \n\n## 安裝 \n\n需要 python >= 2.7\n\n需要 C Libraries：SUSE and RHEL: `glibc-devel` Ubuntu: `libc6-dev` \n\n1. 解壓縮 ``` tar -xvf .tar.gz ``` \n2. ``` cd ``` \n3. 預設配置安裝 ``` sudo ./.sh ``` \n可以自定義 options\n4. 安裝程式將顯示EULA並提示您同意條款 接下來主要介紹 ArmPL 的配置和使用 \n\n\n## 配置 \n1. 檢視可用的環境模組 ``` module avail ``` 可能需要配置MODULEPATH環境變數以包含安裝目錄 ``` export MODULEPATH=$MODULEPATH:/opt/arm/modulefiles/ ``` \n2. 為您使用的編譯器載入適當的模組，如果使用的是用於Linux的Arm Compiler，則建議僅載入編譯器模組，如果使用gcc，則必須載入所需的特定Arm Performance Libraries模組 \n   ``` module load Generic-AArch64/RHEL/7/arm-linux-compiler/20.0 ``` \n   如果使用gcc編譯器，請確保載入正確的模組   \n   ``` module load Generic-AArch64/RHEL/7/gcc-9.2.0/armpl/20.0.0 ```   \n   Tips: 可以考慮將模組載入命令新增到您的.profile中，以在每次登入時自動執行它 \n3. 根據使用的編譯器，使用以下命令檢查環境 \n\n| Compiler | Command |\n| ------------ | ---------------- |\n| armclang | `which armclang` |\n| gcc | `which gcc` |\n\n## 舉個例子 \n\nArmPL 包含許多示例程式，如果是預設安裝的，位置在`/opt/arm//examples/` \n\n這裡以 `fftw_dft_r2c_1d_c_example.c` 為例，具體做什麼就不看了 \n\n編譯和連結的選項： \n-armpl: 與arm編譯器進行編譯和連結時 \n-mcpu = native: 允許編譯器從主機系統推斷要使用的庫 \n-L\\lib: 新增庫搜尋路徑 \n-larmpl_lp64: 連結到Arm Performance Libraries \n-lgfortran: 連結到 gcc Fortran 執行庫 \n-lm: 連結到標準數學庫 \n\n1. 編譯原始碼，生成一個目標檔案 \n\n| **Compiler** | **Command** |\n| ------------ | ------------------------ |\n| armclang | `armclang -c -armpl -mcpu=native fftw_dft_r2c_1d_c_example.c -o fftw_dft_r2c_1d_c_example.o` |\n| gcc | `gcc -c -I/include fftw_dft_r2c_1d_c_example.c -o fftw_dft_r2c_1d_c_example.o` |\n2. 將目的碼連結到可執行檔案中 \n\n| **Compiler** | **Command** |\n| ------------ | ------------------------- |\n| armclang | `armclang fftw_dft_r2c_1d_c_example.o -o fftw_dft_r2c_1d_c_example.exe -armpl -mcpu=native -lm` |\n| gcc | `gcc fftw_dft_r2c_1d_c_example.o -L/lib -o fftw_dft_r2c_1d_c_example.exe -larmpl_lp64 -lgfortran -lm` |\n\n3. 在Arm系統上執行可執行檔案 ``` ./fftw_dft_r2c_1d_c_example.exe ``` \n   可以看到相應的輸出 \n\n## Compile and test the examples examples \n\n目錄包含以下內容： \n- 一個GNUmakefile，用於生成和執行所有示例程式 \n- C 原始碼 .c \n- Fortran原始碼 .f90 \n- 每個示例的預期輸出 .expected \n\nMakefile編譯並執行每個示例，然後將生成的輸出與預期的輸出進行比較。任何差異都會標記為錯誤\n","slug":"2020-04-19-Arm-PL","published":1,"updated":"2020-08-23T05:36:11.416Z","_id":"cke6ns1pa00151wk264kfwn37","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在 CentOS 下配置 Arm 高效能運算庫<br><a id=\"more\"></a><br>Arm Performance Libraries 作為 Linux 的 Arm Compiler 的一部分安裝，並且需要 Arm Allinea Studio 許可證</p>\n<h2 id=\"License\"><a href=\"#License\" class=\"headerlink\" title=\"License\"></a>License</h2><p>Arm Allinea Studio 工具套件為在 Arm 硬體上開發 HPC 應用程式提供了完整的解決方案。 它包括： </p>\n<ul>\n<li>Arm C/C ++/Fortran 編譯器 </li>\n<li>ArmPL </li>\n<li>Arm Forge（Arm DDT，Arm MAP和Arm Performance Reports） </li>\n</ul>\n<p>需要許可證來使用這些工具。 有兩種許可證， Named User 和 Floating</p>\n<p>在獲得許可證後，按照以下說明將其新增到系統中： </p>\n<h3 id=\"Add-a-named-user-license\"><a href=\"#Add-a-named-user-license\" class=\"headerlink\" title=\"Add a named user license\"></a>Add a named user license</h3><ol>\n<li>在 <code>/opt/arm/</code> 目錄中建立一個名為 licenses 的目錄 </li>\n<li>將許可證檔案複製到 <code>/opt/arm/licenses</code> 目錄；如果選擇將許可證檔案放在其他位置，則必須將 <code>ARM_LICENSE_DIR</code> 環境變數設定為指向它 <code>export ARM_LICENSE_DIR=/opt/arm/licenses</code></li>\n<li>Arm Forge 和 Arm Performance Reports 在其特定的安裝目錄中搜索許可證。如果使用的是 Arm Allinea Studio 許可證，並且沒有為這些工具使用單獨的許可證，請設定 <code>ALLINEA_LICENSE_DIR</code> 環境變數以將這些工具指向您的 Arm Allinea Studio 許可證 <code>export ALLINEA_LICENSE_DIR=/opt/arm/licenses &gt;</code></li>\n</ol>\n<p>named user license，無需安裝Arm License Server</p>\n<h3 id=\"Setting-up-a-floating-license\"><a href=\"#Setting-up-a-floating-license\" class=\"headerlink\" title=\"Setting up a floating license\"></a>Setting up a floating license</h3><p>必須下載並安裝 <a href=\"https://developer.arm.com/tools-and-software/server-and-hpc/downloads/arm-licence-server\" target=\"_blank\" rel=\"noopener\">Arm License Server</a> </p>\n<p>浮動許可證由伺服器許可證檔案和客戶端許可證檔案組成，在<a href=\"https://www.arm.com/products/development-tools/server-and-hpc/allinea-studio/get-software?_ga=2.43607085.960219704.1587365001-756695113.1577670013\" target=\"_blank\" rel=\"noopener\">這裡</a>申請 </p>\n<p>檢查客戶端許可證是否包含執行Arm License Server的計算機的主機名或IP地址 </p>\n<ol>\n<li>將客戶端許可證新增到安裝 Arm Allinea Studio 的計算機上。在 <code>/opt/arm</code> 目錄中建立一個名為 <code>licenses</code> 的目錄 </li>\n<li>同 named </li>\n<li>同 named </li>\n<li>將伺服器許可證檔案新增到安裝 Arm License Server 的計算機上。在 <code>/opt/arm/licenceserver</code> 目錄中建立一個名為 <code>licenses</code> 的目錄，並將您的許可證檔案複製到該目錄中 </li>\n<li>重新啟動 Arm License Server </li>\n</ol>\n<h2 id=\"下載\"><a href=\"#下載\" class=\"headerlink\" title=\"下載\"></a>下載</h2><p><a href=\"https://developer.arm.com/products/software-development-tools/hpc/arm-allinea-studio/download\" target=\"_blank\" rel=\"noopener\">Arm Allinea Studio downloads page</a> </p>\n<h2 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h2><p>需要 python &gt;= 2.7</p>\n<p>需要 C Libraries：SUSE and RHEL: <code>glibc-devel</code> Ubuntu: <code>libc6-dev</code> </p>\n<ol>\n<li>解壓縮 <code>tar -xvf .tar.gz</code> </li>\n<li><code>cd</code> </li>\n<li>預設配置安裝 <code>sudo ./.sh</code><br>可以自定義 options</li>\n<li>安裝程式將顯示EULA並提示您同意條款 接下來主要介紹 ArmPL 的配置和使用 </li>\n</ol>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><ol>\n<li>檢視可用的環境模組 <code>module avail</code> 可能需要配置MODULEPATH環境變數以包含安裝目錄 <code>export MODULEPATH=$MODULEPATH:/opt/arm/modulefiles/</code> </li>\n<li>為您使用的編譯器載入適當的模組，如果使用的是用於Linux的Arm Compiler，則建議僅載入編譯器模組，如果使用gcc，則必須載入所需的特定Arm Performance Libraries模組<br><code>module load Generic-AArch64/RHEL/7/arm-linux-compiler/20.0</code><br>如果使用gcc編譯器，請確保載入正確的模組<br><code>module load Generic-AArch64/RHEL/7/gcc-9.2.0/armpl/20.0.0</code><br>Tips: 可以考慮將模組載入命令新增到您的.profile中，以在每次登入時自動執行它 </li>\n<li>根據使用的編譯器，使用以下命令檢查環境 </li>\n</ol>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>Compiler</th>\n<th>Command</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>armclang</td>\n<td><code>which armclang</code></td>\n</tr>\n<tr>\n<td>gcc</td>\n<td><code>which gcc</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"舉個例子\"><a href=\"#舉個例子\" class=\"headerlink\" title=\"舉個例子\"></a>舉個例子</h2><p>ArmPL 包含許多示例程式，如果是預設安裝的，位置在<code>/opt/arm//examples/</code> </p>\n<p>這裡以 <code>fftw_dft_r2c_1d_c_example.c</code> 為例，具體做什麼就不看了 </p>\n<p>編譯和連結的選項：<br>-armpl: 與arm編譯器進行編譯和連結時<br>-mcpu = native: 允許編譯器從主機系統推斷要使用的庫<br>-L\\lib: 新增庫搜尋路徑<br>-larmpl_lp64: 連結到Arm Performance Libraries<br>-lgfortran: 連結到 gcc Fortran 執行庫<br>-lm: 連結到標準數學庫 </p>\n<ol>\n<li>編譯原始碼，生成一個目標檔案 </li>\n</ol>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th><strong>Compiler</strong></th>\n<th><strong>Command</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>armclang</td>\n<td><code>armclang -c -armpl -mcpu=native fftw_dft_r2c_1d_c_example.c -o fftw_dft_r2c_1d_c_example.o</code></td>\n</tr>\n<tr>\n<td>gcc</td>\n<td><code>gcc -c -I/include fftw_dft_r2c_1d_c_example.c -o fftw_dft_r2c_1d_c_example.o</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<ol>\n<li>將目的碼連結到可執行檔案中 </li>\n</ol>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th><strong>Compiler</strong></th>\n<th><strong>Command</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>armclang</td>\n<td><code>armclang fftw_dft_r2c_1d_c_example.o -o fftw_dft_r2c_1d_c_example.exe -armpl -mcpu=native -lm</code></td>\n</tr>\n<tr>\n<td>gcc</td>\n<td><code>gcc fftw_dft_r2c_1d_c_example.o -L/lib -o fftw_dft_r2c_1d_c_example.exe -larmpl_lp64 -lgfortran -lm</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<ol>\n<li>在Arm系統上執行可執行檔案 <code>./fftw_dft_r2c_1d_c_example.exe</code><br>可以看到相應的輸出 </li>\n</ol>\n<h2 id=\"Compile-and-test-the-examples-examples\"><a href=\"#Compile-and-test-the-examples-examples\" class=\"headerlink\" title=\"Compile and test the examples examples\"></a>Compile and test the examples examples</h2><p>目錄包含以下內容： </p>\n<ul>\n<li>一個GNUmakefile，用於生成和執行所有示例程式 </li>\n<li>C 原始碼 .c </li>\n<li>Fortran原始碼 .f90 </li>\n<li>每個示例的預期輸出 .expected </li>\n</ul>\n<p>Makefile編譯並執行每個示例，然後將生成的輸出與預期的輸出進行比較。任何差異都會標記為錯誤</p>\n","site":{"data":{}},"excerpt":"<p>在 CentOS 下配置 Arm 高效能運算庫<br>","more":"<br>Arm Performance Libraries 作為 Linux 的 Arm Compiler 的一部分安裝，並且需要 Arm Allinea Studio 許可證</p>\n<h2 id=\"License\"><a href=\"#License\" class=\"headerlink\" title=\"License\"></a>License</h2><p>Arm Allinea Studio 工具套件為在 Arm 硬體上開發 HPC 應用程式提供了完整的解決方案。 它包括： </p>\n<ul>\n<li>Arm C/C ++/Fortran 編譯器 </li>\n<li>ArmPL </li>\n<li>Arm Forge（Arm DDT，Arm MAP和Arm Performance Reports） </li>\n</ul>\n<p>需要許可證來使用這些工具。 有兩種許可證， Named User 和 Floating</p>\n<p>在獲得許可證後，按照以下說明將其新增到系統中： </p>\n<h3 id=\"Add-a-named-user-license\"><a href=\"#Add-a-named-user-license\" class=\"headerlink\" title=\"Add a named user license\"></a>Add a named user license</h3><ol>\n<li>在 <code>/opt/arm/</code> 目錄中建立一個名為 licenses 的目錄 </li>\n<li>將許可證檔案複製到 <code>/opt/arm/licenses</code> 目錄；如果選擇將許可證檔案放在其他位置，則必須將 <code>ARM_LICENSE_DIR</code> 環境變數設定為指向它 <code>export ARM_LICENSE_DIR=/opt/arm/licenses</code></li>\n<li>Arm Forge 和 Arm Performance Reports 在其特定的安裝目錄中搜索許可證。如果使用的是 Arm Allinea Studio 許可證，並且沒有為這些工具使用單獨的許可證，請設定 <code>ALLINEA_LICENSE_DIR</code> 環境變數以將這些工具指向您的 Arm Allinea Studio 許可證 <code>export ALLINEA_LICENSE_DIR=/opt/arm/licenses &gt;</code></li>\n</ol>\n<p>named user license，無需安裝Arm License Server</p>\n<h3 id=\"Setting-up-a-floating-license\"><a href=\"#Setting-up-a-floating-license\" class=\"headerlink\" title=\"Setting up a floating license\"></a>Setting up a floating license</h3><p>必須下載並安裝 <a href=\"https://developer.arm.com/tools-and-software/server-and-hpc/downloads/arm-licence-server\" target=\"_blank\" rel=\"noopener\">Arm License Server</a> </p>\n<p>浮動許可證由伺服器許可證檔案和客戶端許可證檔案組成，在<a href=\"https://www.arm.com/products/development-tools/server-and-hpc/allinea-studio/get-software?_ga=2.43607085.960219704.1587365001-756695113.1577670013\" target=\"_blank\" rel=\"noopener\">這裡</a>申請 </p>\n<p>檢查客戶端許可證是否包含執行Arm License Server的計算機的主機名或IP地址 </p>\n<ol>\n<li>將客戶端許可證新增到安裝 Arm Allinea Studio 的計算機上。在 <code>/opt/arm</code> 目錄中建立一個名為 <code>licenses</code> 的目錄 </li>\n<li>同 named </li>\n<li>同 named </li>\n<li>將伺服器許可證檔案新增到安裝 Arm License Server 的計算機上。在 <code>/opt/arm/licenceserver</code> 目錄中建立一個名為 <code>licenses</code> 的目錄，並將您的許可證檔案複製到該目錄中 </li>\n<li>重新啟動 Arm License Server </li>\n</ol>\n<h2 id=\"下載\"><a href=\"#下載\" class=\"headerlink\" title=\"下載\"></a>下載</h2><p><a href=\"https://developer.arm.com/products/software-development-tools/hpc/arm-allinea-studio/download\" target=\"_blank\" rel=\"noopener\">Arm Allinea Studio downloads page</a> </p>\n<h2 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h2><p>需要 python &gt;= 2.7</p>\n<p>需要 C Libraries：SUSE and RHEL: <code>glibc-devel</code> Ubuntu: <code>libc6-dev</code> </p>\n<ol>\n<li>解壓縮 <code>tar -xvf .tar.gz</code> </li>\n<li><code>cd</code> </li>\n<li>預設配置安裝 <code>sudo ./.sh</code><br>可以自定義 options</li>\n<li>安裝程式將顯示EULA並提示您同意條款 接下來主要介紹 ArmPL 的配置和使用 </li>\n</ol>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><ol>\n<li>檢視可用的環境模組 <code>module avail</code> 可能需要配置MODULEPATH環境變數以包含安裝目錄 <code>export MODULEPATH=$MODULEPATH:/opt/arm/modulefiles/</code> </li>\n<li>為您使用的編譯器載入適當的模組，如果使用的是用於Linux的Arm Compiler，則建議僅載入編譯器模組，如果使用gcc，則必須載入所需的特定Arm Performance Libraries模組<br><code>module load Generic-AArch64/RHEL/7/arm-linux-compiler/20.0</code><br>如果使用gcc編譯器，請確保載入正確的模組<br><code>module load Generic-AArch64/RHEL/7/gcc-9.2.0/armpl/20.0.0</code><br>Tips: 可以考慮將模組載入命令新增到您的.profile中，以在每次登入時自動執行它 </li>\n<li>根據使用的編譯器，使用以下命令檢查環境 </li>\n</ol>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>Compiler</th>\n<th>Command</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>armclang</td>\n<td><code>which armclang</code></td>\n</tr>\n<tr>\n<td>gcc</td>\n<td><code>which gcc</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"舉個例子\"><a href=\"#舉個例子\" class=\"headerlink\" title=\"舉個例子\"></a>舉個例子</h2><p>ArmPL 包含許多示例程式，如果是預設安裝的，位置在<code>/opt/arm//examples/</code> </p>\n<p>這裡以 <code>fftw_dft_r2c_1d_c_example.c</code> 為例，具體做什麼就不看了 </p>\n<p>編譯和連結的選項：<br>-armpl: 與arm編譯器進行編譯和連結時<br>-mcpu = native: 允許編譯器從主機系統推斷要使用的庫<br>-L\\lib: 新增庫搜尋路徑<br>-larmpl_lp64: 連結到Arm Performance Libraries<br>-lgfortran: 連結到 gcc Fortran 執行庫<br>-lm: 連結到標準數學庫 </p>\n<ol>\n<li>編譯原始碼，生成一個目標檔案 </li>\n</ol>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th><strong>Compiler</strong></th>\n<th><strong>Command</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>armclang</td>\n<td><code>armclang -c -armpl -mcpu=native fftw_dft_r2c_1d_c_example.c -o fftw_dft_r2c_1d_c_example.o</code></td>\n</tr>\n<tr>\n<td>gcc</td>\n<td><code>gcc -c -I/include fftw_dft_r2c_1d_c_example.c -o fftw_dft_r2c_1d_c_example.o</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<ol>\n<li>將目的碼連結到可執行檔案中 </li>\n</ol>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th><strong>Compiler</strong></th>\n<th><strong>Command</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>armclang</td>\n<td><code>armclang fftw_dft_r2c_1d_c_example.o -o fftw_dft_r2c_1d_c_example.exe -armpl -mcpu=native -lm</code></td>\n</tr>\n<tr>\n<td>gcc</td>\n<td><code>gcc fftw_dft_r2c_1d_c_example.o -L/lib -o fftw_dft_r2c_1d_c_example.exe -larmpl_lp64 -lgfortran -lm</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<ol>\n<li>在Arm系統上執行可執行檔案 <code>./fftw_dft_r2c_1d_c_example.exe</code><br>可以看到相應的輸出 </li>\n</ol>\n<h2 id=\"Compile-and-test-the-examples-examples\"><a href=\"#Compile-and-test-the-examples-examples\" class=\"headerlink\" title=\"Compile and test the examples examples\"></a>Compile and test the examples examples</h2><p>目錄包含以下內容： </p>\n<ul>\n<li>一個GNUmakefile，用於生成和執行所有示例程式 </li>\n<li>C 原始碼 .c </li>\n<li>Fortran原始碼 .f90 </li>\n<li>每個示例的預期輸出 .expected </li>\n</ul>\n<p>Makefile編譯並執行每個示例，然後將生成的輸出與預期的輸出進行比較。任何差異都會標記為錯誤</p>"},{"title":"一道情人節的密碼題","date":"2018-08-17T11:18:12.000Z","index_img":"https://gitee.com/IsumiAlice/IsumiPic/raw/master///20200515204644.jpg","banner_img":"https://gitee.com/IsumiAlice/IsumiPic/raw/master///20200515204644.jpg","_content":"七夕快樂哦\n<!-- more -->\n## 七夕快樂哦\n今天是七夕呢，寫這個的起因是一個同學的女朋友發了個密碼解密給他。\n![](https://raw.githubusercontent.com/IsumiAlice/IsumiPic/master/20200410231059.jpg)\n這就是今天要解決的問題嘍，當然，先把兩種密碼的相關知識貼上。\n\n\n## 凱撒密碼\n在[密碼學](https://zh.wikipedia.org/wiki/%E5%AF%86%E7%A0%81%E5%AD%A6 \"密碼學\")中，**愷撒密碼**（英語：Caesar cipher），或稱**愷撒加密**、**愷撒變換**、**變換加密**，是一種最簡單且最廣為人知的加密技術。它是一種[替換加密](https://zh.wikipedia.org/wiki/%E6%9B%BF%E6%8D%A2%E5%BC%8F%E5%AF%86%E7%A0%81 \"替換式密碼\")的技術，[明文](https://zh.wikipedia.org/wiki/%E6%98%8E%E6%96%87 \"明文\")中的所有字母都在[字母表](https://zh.wikipedia.org/wiki/%E5%AD%97%E6%AF%8D%E8%A1%A8 \"字母表\")上向後（或向前）按照一個固定數目進行偏移後被替換成[密文](https://zh.wikipedia.org/wiki/%E5%AF%86%E6%96%87 \"密文\")。例如，當偏移量是3的時候，所有的字母A將被替換成D，B變成E，以此類推。這個加密方法是以[羅馬共和](https://zh.wikipedia.org/wiki/%E7%BE%85%E9%A6%AC%E5%85%B1%E5%92%8C \"羅馬共和\")時期[愷撒](https://zh.wikipedia.org/wiki/%E6%81%BA%E6%92%92 \"愷撒\")的名字命名的，當年愷撒曾用此方法與其將軍們進行聯繫。\n\n愷撒密碼通常被作為其他更複雜的加密方法中的一個步驟，例如[維吉尼亞密碼](https://zh.wikipedia.org/wiki/%E7%BB%B4%E5%90%89%E5%B0%BC%E4%BA%9A%E5%AF%86%E7%A0%81 \"維吉尼亞密碼\")。愷撒密碼還在現代的[ROT13](https://zh.wikipedia.org/wiki/ROT13 \"ROT13\")系統中被應用。但是和所有的利用字母表進行替換的加密技術一樣，愷撒密碼非常容易被破解，而且在實際應用中也無法保證通信安全。\n\n## 柵欄密碼\n所謂柵欄[密碼](https://www.itsfun.com.tw/%E5%AF%86%E7%A2%BC/wiki-8783265-8437835)，就是把要加密的明文分成N個一組，然後把每組的第i個字連起來，形成一段無規律的話。\n\n一般比較常見的是2欄的棚欄密碼。\n比如明文：THERE IS A CIPHER\n去掉空格後變為：THEREISACIPHER\n兩個一組，得到：TH ER EI SA CI PH ER\n先取出第一個字母：TEESCPE\n再取出第二個字母：HRIAIHR\n連在一起就是：TEESCPEHRIAIHR\n這樣就得到我們需要的密碼了！\n\n而解密的時候，我們先吧[密文](https://www.itsfun.com.tw/%E5%AF%86%E6%96%87/wiki-4343875-4728655)從中間分開，變為兩行：\nT E E S C P E\nH R I A I H R\n再按上下上下的順序組合起來：\nTHEREISACIPHER\n分出[空格](https://www.itsfun.com.tw/%E7%A9%BA%E6%A0%BC/wiki-1130465-5262045)，就可以得到原文了：\nTHERE IS A CIPHER\n\n## Python 簡單實現\n十幾行代碼，非常簡單。\n後面的 for 循環部分應該還能再簡化一點。\n```python\nimport math\ninp = 'cvpgygppjvtgpgfgjgtq'\nnum = -2\nstep1 = [chr(97 + (ord(x)-97+num)%26) for x in inp]\nprint (step1)\n\nnum2 = 3\nnum3 = math.ceil(len(step1)/num2)\ns2 = [step1[i*num3: (num3*(i+1)) if (num3*(i+1))<len(step1) else len(step1)] for i in range(num2)]\nprint(s2)\ns3 = []\nfor j in range(num3):\n    for i in range(num2):\n        try:\n            s3.append(s2[i][j])\n        except:\n            pass\nprint (s3)\n'''\nand then there were none\n'''\n```","source":"_posts/2018-08-17-Valentine-pw.md","raw":"---\ntitle: 一道情人節的密碼題\ndate: 2018-08-17 19:18:12\ncategories: 技術\ntags: \n- 演算法\nindex_img: https://gitee.com/IsumiAlice/IsumiPic/raw/master///20200515204644.jpg\nbanner_img: https://gitee.com/IsumiAlice/IsumiPic/raw/master///20200515204644.jpg\n---\n七夕快樂哦\n<!-- more -->\n## 七夕快樂哦\n今天是七夕呢，寫這個的起因是一個同學的女朋友發了個密碼解密給他。\n![](https://raw.githubusercontent.com/IsumiAlice/IsumiPic/master/20200410231059.jpg)\n這就是今天要解決的問題嘍，當然，先把兩種密碼的相關知識貼上。\n\n\n## 凱撒密碼\n在[密碼學](https://zh.wikipedia.org/wiki/%E5%AF%86%E7%A0%81%E5%AD%A6 \"密碼學\")中，**愷撒密碼**（英語：Caesar cipher），或稱**愷撒加密**、**愷撒變換**、**變換加密**，是一種最簡單且最廣為人知的加密技術。它是一種[替換加密](https://zh.wikipedia.org/wiki/%E6%9B%BF%E6%8D%A2%E5%BC%8F%E5%AF%86%E7%A0%81 \"替換式密碼\")的技術，[明文](https://zh.wikipedia.org/wiki/%E6%98%8E%E6%96%87 \"明文\")中的所有字母都在[字母表](https://zh.wikipedia.org/wiki/%E5%AD%97%E6%AF%8D%E8%A1%A8 \"字母表\")上向後（或向前）按照一個固定數目進行偏移後被替換成[密文](https://zh.wikipedia.org/wiki/%E5%AF%86%E6%96%87 \"密文\")。例如，當偏移量是3的時候，所有的字母A將被替換成D，B變成E，以此類推。這個加密方法是以[羅馬共和](https://zh.wikipedia.org/wiki/%E7%BE%85%E9%A6%AC%E5%85%B1%E5%92%8C \"羅馬共和\")時期[愷撒](https://zh.wikipedia.org/wiki/%E6%81%BA%E6%92%92 \"愷撒\")的名字命名的，當年愷撒曾用此方法與其將軍們進行聯繫。\n\n愷撒密碼通常被作為其他更複雜的加密方法中的一個步驟，例如[維吉尼亞密碼](https://zh.wikipedia.org/wiki/%E7%BB%B4%E5%90%89%E5%B0%BC%E4%BA%9A%E5%AF%86%E7%A0%81 \"維吉尼亞密碼\")。愷撒密碼還在現代的[ROT13](https://zh.wikipedia.org/wiki/ROT13 \"ROT13\")系統中被應用。但是和所有的利用字母表進行替換的加密技術一樣，愷撒密碼非常容易被破解，而且在實際應用中也無法保證通信安全。\n\n## 柵欄密碼\n所謂柵欄[密碼](https://www.itsfun.com.tw/%E5%AF%86%E7%A2%BC/wiki-8783265-8437835)，就是把要加密的明文分成N個一組，然後把每組的第i個字連起來，形成一段無規律的話。\n\n一般比較常見的是2欄的棚欄密碼。\n比如明文：THERE IS A CIPHER\n去掉空格後變為：THEREISACIPHER\n兩個一組，得到：TH ER EI SA CI PH ER\n先取出第一個字母：TEESCPE\n再取出第二個字母：HRIAIHR\n連在一起就是：TEESCPEHRIAIHR\n這樣就得到我們需要的密碼了！\n\n而解密的時候，我們先吧[密文](https://www.itsfun.com.tw/%E5%AF%86%E6%96%87/wiki-4343875-4728655)從中間分開，變為兩行：\nT E E S C P E\nH R I A I H R\n再按上下上下的順序組合起來：\nTHEREISACIPHER\n分出[空格](https://www.itsfun.com.tw/%E7%A9%BA%E6%A0%BC/wiki-1130465-5262045)，就可以得到原文了：\nTHERE IS A CIPHER\n\n## Python 簡單實現\n十幾行代碼，非常簡單。\n後面的 for 循環部分應該還能再簡化一點。\n```python\nimport math\ninp = 'cvpgygppjvtgpgfgjgtq'\nnum = -2\nstep1 = [chr(97 + (ord(x)-97+num)%26) for x in inp]\nprint (step1)\n\nnum2 = 3\nnum3 = math.ceil(len(step1)/num2)\ns2 = [step1[i*num3: (num3*(i+1)) if (num3*(i+1))<len(step1) else len(step1)] for i in range(num2)]\nprint(s2)\ns3 = []\nfor j in range(num3):\n    for i in range(num2):\n        try:\n            s3.append(s2[i][j])\n        except:\n            pass\nprint (s3)\n'''\nand then there were none\n'''\n```","slug":"2018-08-17-Valentine-pw","published":1,"updated":"2020-08-23T05:44:18.861Z","_id":"cke6nsqc200191wk2yrca8ccz","comments":1,"layout":"post","photos":[],"link":"","content":"<p>七夕快樂哦<br><a id=\"more\"></a></p>\n<h2 id=\"七夕快樂哦\"><a href=\"#七夕快樂哦\" class=\"headerlink\" title=\"七夕快樂哦\"></a>七夕快樂哦</h2><p>今天是七夕呢，寫這個的起因是一個同學的女朋友發了個密碼解密給他。<br><img src=\"https://raw.githubusercontent.com/IsumiAlice/IsumiPic/master/20200410231059.jpg\" srcset=\"/img/loading.gif\" alt><br>這就是今天要解決的問題嘍，當然，先把兩種密碼的相關知識貼上。</p>\n<h2 id=\"凱撒密碼\"><a href=\"#凱撒密碼\" class=\"headerlink\" title=\"凱撒密碼\"></a>凱撒密碼</h2><p>在<a href=\"https://zh.wikipedia.org/wiki/%E5%AF%86%E7%A0%81%E5%AD%A6\" title=\"密碼學\" target=\"_blank\" rel=\"noopener\">密碼學</a>中，<strong>愷撒密碼</strong>（英語：Caesar cipher），或稱<strong>愷撒加密</strong>、<strong>愷撒變換</strong>、<strong>變換加密</strong>，是一種最簡單且最廣為人知的加密技術。它是一種<a href=\"https://zh.wikipedia.org/wiki/%E6%9B%BF%E6%8D%A2%E5%BC%8F%E5%AF%86%E7%A0%81\" title=\"替換式密碼\" target=\"_blank\" rel=\"noopener\">替換加密</a>的技術，<a href=\"https://zh.wikipedia.org/wiki/%E6%98%8E%E6%96%87\" title=\"明文\" target=\"_blank\" rel=\"noopener\">明文</a>中的所有字母都在<a href=\"https://zh.wikipedia.org/wiki/%E5%AD%97%E6%AF%8D%E8%A1%A8\" title=\"字母表\" target=\"_blank\" rel=\"noopener\">字母表</a>上向後（或向前）按照一個固定數目進行偏移後被替換成<a href=\"https://zh.wikipedia.org/wiki/%E5%AF%86%E6%96%87\" title=\"密文\" target=\"_blank\" rel=\"noopener\">密文</a>。例如，當偏移量是3的時候，所有的字母A將被替換成D，B變成E，以此類推。這個加密方法是以<a href=\"https://zh.wikipedia.org/wiki/%E7%BE%85%E9%A6%AC%E5%85%B1%E5%92%8C\" title=\"羅馬共和\" target=\"_blank\" rel=\"noopener\">羅馬共和</a>時期<a href=\"https://zh.wikipedia.org/wiki/%E6%81%BA%E6%92%92\" title=\"愷撒\" target=\"_blank\" rel=\"noopener\">愷撒</a>的名字命名的，當年愷撒曾用此方法與其將軍們進行聯繫。</p>\n<p>愷撒密碼通常被作為其他更複雜的加密方法中的一個步驟，例如<a href=\"https://zh.wikipedia.org/wiki/%E7%BB%B4%E5%90%89%E5%B0%BC%E4%BA%9A%E5%AF%86%E7%A0%81\" title=\"維吉尼亞密碼\" target=\"_blank\" rel=\"noopener\">維吉尼亞密碼</a>。愷撒密碼還在現代的<a href=\"https://zh.wikipedia.org/wiki/ROT13\" title=\"ROT13\" target=\"_blank\" rel=\"noopener\">ROT13</a>系統中被應用。但是和所有的利用字母表進行替換的加密技術一樣，愷撒密碼非常容易被破解，而且在實際應用中也無法保證通信安全。</p>\n<h2 id=\"柵欄密碼\"><a href=\"#柵欄密碼\" class=\"headerlink\" title=\"柵欄密碼\"></a>柵欄密碼</h2><p>所謂柵欄<a href=\"https://www.itsfun.com.tw/%E5%AF%86%E7%A2%BC/wiki-8783265-8437835\" target=\"_blank\" rel=\"noopener\">密碼</a>，就是把要加密的明文分成N個一組，然後把每組的第i個字連起來，形成一段無規律的話。</p>\n<p>一般比較常見的是2欄的棚欄密碼。<br>比如明文：THERE IS A CIPHER<br>去掉空格後變為：THEREISACIPHER<br>兩個一組，得到：TH ER EI SA CI PH ER<br>先取出第一個字母：TEESCPE<br>再取出第二個字母：HRIAIHR<br>連在一起就是：TEESCPEHRIAIHR<br>這樣就得到我們需要的密碼了！</p>\n<p>而解密的時候，我們先吧<a href=\"https://www.itsfun.com.tw/%E5%AF%86%E6%96%87/wiki-4343875-4728655\" target=\"_blank\" rel=\"noopener\">密文</a>從中間分開，變為兩行：<br>T E E S C P E<br>H R I A I H R<br>再按上下上下的順序組合起來：<br>THEREISACIPHER<br>分出<a href=\"https://www.itsfun.com.tw/%E7%A9%BA%E6%A0%BC/wiki-1130465-5262045\" target=\"_blank\" rel=\"noopener\">空格</a>，就可以得到原文了：<br>THERE IS A CIPHER</p>\n<h2 id=\"Python-簡單實現\"><a href=\"#Python-簡單實現\" class=\"headerlink\" title=\"Python 簡單實現\"></a>Python 簡單實現</h2><p>十幾行代碼，非常簡單。<br>後面的 for 循環部分應該還能再簡化一點。<br><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> math\ninp = <span class=\"hljs-string\">'cvpgygppjvtgpgfgjgtq'</span>\nnum = <span class=\"hljs-number\">-2</span>\nstep1 = [chr(<span class=\"hljs-number\">97</span> + (ord(x)<span class=\"hljs-number\">-97</span>+num)%<span class=\"hljs-number\">26</span>) <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> inp]\n<span class=\"hljs-keyword\">print</span> (step1)\n\nnum2 = <span class=\"hljs-number\">3</span>\nnum3 = math.ceil(len(step1)/num2)\ns2 = [step1[i*num3: (num3*(i+<span class=\"hljs-number\">1</span>)) <span class=\"hljs-keyword\">if</span> (num3*(i+<span class=\"hljs-number\">1</span>))&lt;len(step1) <span class=\"hljs-keyword\">else</span> len(step1)] <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> range(num2)]\nprint(s2)\ns3 = []\n<span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> range(num3):\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> range(num2):\n        <span class=\"hljs-keyword\">try</span>:\n            s3.append(s2[i][j])\n        <span class=\"hljs-keyword\">except</span>:\n            <span class=\"hljs-keyword\">pass</span>\n<span class=\"hljs-keyword\">print</span> (s3)\n<span class=\"hljs-string\">'''\nand then there were none\n'''</span></code></pre></p>\n","site":{"data":{}},"excerpt":"<p>七夕快樂哦<br>","more":"</p>\n<h2 id=\"七夕快樂哦\"><a href=\"#七夕快樂哦\" class=\"headerlink\" title=\"七夕快樂哦\"></a>七夕快樂哦</h2><p>今天是七夕呢，寫這個的起因是一個同學的女朋友發了個密碼解密給他。<br><img src=\"https://raw.githubusercontent.com/IsumiAlice/IsumiPic/master/20200410231059.jpg\" srcset=\"/img/loading.gif\" alt><br>這就是今天要解決的問題嘍，當然，先把兩種密碼的相關知識貼上。</p>\n<h2 id=\"凱撒密碼\"><a href=\"#凱撒密碼\" class=\"headerlink\" title=\"凱撒密碼\"></a>凱撒密碼</h2><p>在<a href=\"https://zh.wikipedia.org/wiki/%E5%AF%86%E7%A0%81%E5%AD%A6\" title=\"密碼學\" target=\"_blank\" rel=\"noopener\">密碼學</a>中，<strong>愷撒密碼</strong>（英語：Caesar cipher），或稱<strong>愷撒加密</strong>、<strong>愷撒變換</strong>、<strong>變換加密</strong>，是一種最簡單且最廣為人知的加密技術。它是一種<a href=\"https://zh.wikipedia.org/wiki/%E6%9B%BF%E6%8D%A2%E5%BC%8F%E5%AF%86%E7%A0%81\" title=\"替換式密碼\" target=\"_blank\" rel=\"noopener\">替換加密</a>的技術，<a href=\"https://zh.wikipedia.org/wiki/%E6%98%8E%E6%96%87\" title=\"明文\" target=\"_blank\" rel=\"noopener\">明文</a>中的所有字母都在<a href=\"https://zh.wikipedia.org/wiki/%E5%AD%97%E6%AF%8D%E8%A1%A8\" title=\"字母表\" target=\"_blank\" rel=\"noopener\">字母表</a>上向後（或向前）按照一個固定數目進行偏移後被替換成<a href=\"https://zh.wikipedia.org/wiki/%E5%AF%86%E6%96%87\" title=\"密文\" target=\"_blank\" rel=\"noopener\">密文</a>。例如，當偏移量是3的時候，所有的字母A將被替換成D，B變成E，以此類推。這個加密方法是以<a href=\"https://zh.wikipedia.org/wiki/%E7%BE%85%E9%A6%AC%E5%85%B1%E5%92%8C\" title=\"羅馬共和\" target=\"_blank\" rel=\"noopener\">羅馬共和</a>時期<a href=\"https://zh.wikipedia.org/wiki/%E6%81%BA%E6%92%92\" title=\"愷撒\" target=\"_blank\" rel=\"noopener\">愷撒</a>的名字命名的，當年愷撒曾用此方法與其將軍們進行聯繫。</p>\n<p>愷撒密碼通常被作為其他更複雜的加密方法中的一個步驟，例如<a href=\"https://zh.wikipedia.org/wiki/%E7%BB%B4%E5%90%89%E5%B0%BC%E4%BA%9A%E5%AF%86%E7%A0%81\" title=\"維吉尼亞密碼\" target=\"_blank\" rel=\"noopener\">維吉尼亞密碼</a>。愷撒密碼還在現代的<a href=\"https://zh.wikipedia.org/wiki/ROT13\" title=\"ROT13\" target=\"_blank\" rel=\"noopener\">ROT13</a>系統中被應用。但是和所有的利用字母表進行替換的加密技術一樣，愷撒密碼非常容易被破解，而且在實際應用中也無法保證通信安全。</p>\n<h2 id=\"柵欄密碼\"><a href=\"#柵欄密碼\" class=\"headerlink\" title=\"柵欄密碼\"></a>柵欄密碼</h2><p>所謂柵欄<a href=\"https://www.itsfun.com.tw/%E5%AF%86%E7%A2%BC/wiki-8783265-8437835\" target=\"_blank\" rel=\"noopener\">密碼</a>，就是把要加密的明文分成N個一組，然後把每組的第i個字連起來，形成一段無規律的話。</p>\n<p>一般比較常見的是2欄的棚欄密碼。<br>比如明文：THERE IS A CIPHER<br>去掉空格後變為：THEREISACIPHER<br>兩個一組，得到：TH ER EI SA CI PH ER<br>先取出第一個字母：TEESCPE<br>再取出第二個字母：HRIAIHR<br>連在一起就是：TEESCPEHRIAIHR<br>這樣就得到我們需要的密碼了！</p>\n<p>而解密的時候，我們先吧<a href=\"https://www.itsfun.com.tw/%E5%AF%86%E6%96%87/wiki-4343875-4728655\" target=\"_blank\" rel=\"noopener\">密文</a>從中間分開，變為兩行：<br>T E E S C P E<br>H R I A I H R<br>再按上下上下的順序組合起來：<br>THEREISACIPHER<br>分出<a href=\"https://www.itsfun.com.tw/%E7%A9%BA%E6%A0%BC/wiki-1130465-5262045\" target=\"_blank\" rel=\"noopener\">空格</a>，就可以得到原文了：<br>THERE IS A CIPHER</p>\n<h2 id=\"Python-簡單實現\"><a href=\"#Python-簡單實現\" class=\"headerlink\" title=\"Python 簡單實現\"></a>Python 簡單實現</h2><p>十幾行代碼，非常簡單。<br>後面的 for 循環部分應該還能再簡化一點。<br><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> math\ninp = <span class=\"hljs-string\">'cvpgygppjvtgpgfgjgtq'</span>\nnum = <span class=\"hljs-number\">-2</span>\nstep1 = [chr(<span class=\"hljs-number\">97</span> + (ord(x)<span class=\"hljs-number\">-97</span>+num)%<span class=\"hljs-number\">26</span>) <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> inp]\n<span class=\"hljs-keyword\">print</span> (step1)\n\nnum2 = <span class=\"hljs-number\">3</span>\nnum3 = math.ceil(len(step1)/num2)\ns2 = [step1[i*num3: (num3*(i+<span class=\"hljs-number\">1</span>)) <span class=\"hljs-keyword\">if</span> (num3*(i+<span class=\"hljs-number\">1</span>))&lt;len(step1) <span class=\"hljs-keyword\">else</span> len(step1)] <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> range(num2)]\nprint(s2)\ns3 = []\n<span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> range(num3):\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> range(num2):\n        <span class=\"hljs-keyword\">try</span>:\n            s3.append(s2[i][j])\n        <span class=\"hljs-keyword\">except</span>:\n            <span class=\"hljs-keyword\">pass</span>\n<span class=\"hljs-keyword\">print</span> (s3)\n<span class=\"hljs-string\">'''\nand then there were none\n'''</span></code></pre></p>"},{"title":"基於 Hexo 搭建個人靜態部落格","date":"2018-01-29T03:00:18.000Z","index_img":"https://gitee.com/IsumiAlice/IsumiPic/raw/master///20200515204647.jpg","banner_img":"https://gitee.com/IsumiAlice/IsumiPic/raw/master///20200515204647.jpg","_content":"本站搭建過程（已過氣）\n<!-- more -->\n## 安裝\n安裝[Node.js](https://nodejs.org/en/)  \n更換爲國內源，安裝 cnpm\n\n```\n$ npm config set registry https://registry.npm.taobao.org\n$ npm config get registry\n\n$ npm install -g cnpm\n$ cmpm install hexo \n```\n安裝[Git](https://git-scm.com/downloads)  \n安裝[Hexo](https://hexo.io/zh-tw/)  \n``` bash\n$ npm install -g hexo-cli\n```\n## 建立\n一旦 Hexo 完成後，請執行下列指令，Hexo 會在指定資料夾中建立所有您需要的檔案。\n``` bash\n$ hexo init blog\n$ cd blog\n$ npm install\n```\n### 建立一篇新的文章\n``` bash\n$ hexo new [layout] <title>\n```\n| 佈局  | 路徑           |\n| ----- | -------------- |\n| post  | source/_posts  |\n| page  | source         |\n| draft | source/_drafts |\n### 產生靜態檔案\n``` bash\n$ hexo generate\n```\n| 選項         | 描述               |\n| ------------ | ------------------ |\n| -d, --deploy | 產生完成即部署網站 |\n| -w, --watch  | 監看檔案變更       |\n\n### 啟動伺服器\n預設為 http://localhost:4000/\n``` bash\n$ hexo server\n```\n### 部署網站到Git\n可以直接使用git命令部署，將 ``public`` 資料夾裏的文件複製到git目錄下，之後使用 ``git commit``\n``` bash\n$ hexo generate\n\n$ git add .\n$ git commit -m \"update\"\n$ git push origin master\n```\n### Clean\n``` bash\n$ hexo clean\n```\n### 列出網站資料\n``` bash\n$ hexo list <type>\n```\n### 顯示版本咨詢\n``` bash\n$ hexo version\n```\n## 更換主題\n在 ``themes`` 資料夾內，新增一個資料夾，並修改 ``_config.yml`` 內的 ``theme`` 設定，即可切換主題\n\n## 渲染公式\n\n更換 markdown 渲染引擎\n\n```\nnpm uninstall hexo-renderer-marked --save\nnpm install hexo-renderer-kramed --save\n```\n\n修改 node_modules/kramed/lib/rules/inline.js\n\n注意註釋部分\n\n```\nvar inline = {\n  // escape: /^\\\\([\\\\`*{}\\[\\]()#$+\\-.!_>])/,\n  escape: /^\\\\([`*\\[\\]()#$+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  html: /^<!--[\\s\\S]*?-->|^<(\\w+(?!:\\/|[^\\w\\s@]*@)\\b)*?(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>([\\s\\S]*?)?<\\/\\1>|^<(\\w+(?!:\\/|[^\\w\\s@]*@)\\b)(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n  reffn: /^!?\\[\\^(inside)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  // em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  em: /^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`$]| {2,}\\n|$)/,\n  math: /^\\$\\$\\s*([\\s\\S]*?[^\\$])\\s*\\$\\$(?!\\$)/,\n};\n```\n\n在主題中開啓 mathjax\n\n在 themes/xxx/_config.yml\n\n一般\n\n```\nmath:\n  enable: true\n  per_page: true\n  engine: mathjax\n```\n\n在需要渲染公式的文章的 Fornt-matter 中打開 mathjax\n\n```\n---\nmathjax: true\n--\n```","source":"_posts/2018-01-29-hello-hexo.md","raw":"---\ntitle: 基於 Hexo 搭建個人靜態部落格\ndate: 2018-01-29 11:00:18\ncategories: \n - 技術\ntags: \n - Web\nindex_img: https://gitee.com/IsumiAlice/IsumiPic/raw/master///20200515204647.jpg\nbanner_img: https://gitee.com/IsumiAlice/IsumiPic/raw/master///20200515204647.jpg\n---\n本站搭建過程（已過氣）\n<!-- more -->\n## 安裝\n安裝[Node.js](https://nodejs.org/en/)  \n更換爲國內源，安裝 cnpm\n\n```\n$ npm config set registry https://registry.npm.taobao.org\n$ npm config get registry\n\n$ npm install -g cnpm\n$ cmpm install hexo \n```\n安裝[Git](https://git-scm.com/downloads)  \n安裝[Hexo](https://hexo.io/zh-tw/)  \n``` bash\n$ npm install -g hexo-cli\n```\n## 建立\n一旦 Hexo 完成後，請執行下列指令，Hexo 會在指定資料夾中建立所有您需要的檔案。\n``` bash\n$ hexo init blog\n$ cd blog\n$ npm install\n```\n### 建立一篇新的文章\n``` bash\n$ hexo new [layout] <title>\n```\n| 佈局  | 路徑           |\n| ----- | -------------- |\n| post  | source/_posts  |\n| page  | source         |\n| draft | source/_drafts |\n### 產生靜態檔案\n``` bash\n$ hexo generate\n```\n| 選項         | 描述               |\n| ------------ | ------------------ |\n| -d, --deploy | 產生完成即部署網站 |\n| -w, --watch  | 監看檔案變更       |\n\n### 啟動伺服器\n預設為 http://localhost:4000/\n``` bash\n$ hexo server\n```\n### 部署網站到Git\n可以直接使用git命令部署，將 ``public`` 資料夾裏的文件複製到git目錄下，之後使用 ``git commit``\n``` bash\n$ hexo generate\n\n$ git add .\n$ git commit -m \"update\"\n$ git push origin master\n```\n### Clean\n``` bash\n$ hexo clean\n```\n### 列出網站資料\n``` bash\n$ hexo list <type>\n```\n### 顯示版本咨詢\n``` bash\n$ hexo version\n```\n## 更換主題\n在 ``themes`` 資料夾內，新增一個資料夾，並修改 ``_config.yml`` 內的 ``theme`` 設定，即可切換主題\n\n## 渲染公式\n\n更換 markdown 渲染引擎\n\n```\nnpm uninstall hexo-renderer-marked --save\nnpm install hexo-renderer-kramed --save\n```\n\n修改 node_modules/kramed/lib/rules/inline.js\n\n注意註釋部分\n\n```\nvar inline = {\n  // escape: /^\\\\([\\\\`*{}\\[\\]()#$+\\-.!_>])/,\n  escape: /^\\\\([`*\\[\\]()#$+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  html: /^<!--[\\s\\S]*?-->|^<(\\w+(?!:\\/|[^\\w\\s@]*@)\\b)*?(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>([\\s\\S]*?)?<\\/\\1>|^<(\\w+(?!:\\/|[^\\w\\s@]*@)\\b)(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n  reffn: /^!?\\[\\^(inside)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  // em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  em: /^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`$]| {2,}\\n|$)/,\n  math: /^\\$\\$\\s*([\\s\\S]*?[^\\$])\\s*\\$\\$(?!\\$)/,\n};\n```\n\n在主題中開啓 mathjax\n\n在 themes/xxx/_config.yml\n\n一般\n\n```\nmath:\n  enable: true\n  per_page: true\n  engine: mathjax\n```\n\n在需要渲染公式的文章的 Fornt-matter 中打開 mathjax\n\n```\n---\nmathjax: true\n--\n```","slug":"2018-01-29-hello-hexo","published":1,"updated":"2020-08-23T05:45:16.395Z","_id":"cke6nt2ac001b1wk2y8d0xax8","comments":1,"layout":"post","photos":[],"link":"","content":"<p>本站搭建過程（已過氣）<br><a id=\"more\"></a></p>\n<h2 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h2><p>安裝<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">Node.js</a><br>更換爲國內源，安裝 cnpm</p>\n<pre><code class=\"hljs undefined\"><span class=\"hljs-symbol\">$</span> npm config <span class=\"hljs-keyword\">set</span> registry <span class=\"hljs-comment\">https:</span>//<span class=\"hljs-comment\">registry.npm.taobao.org</span>\n$ npm <span class=\"hljs-comment\">config get registry</span>\n\n$ npm <span class=\"hljs-comment\">install -g cnpm</span>\n$ cmpm <span class=\"hljs-comment\">install hexo</span></code></pre>\n<p>安裝<a href=\"https://git-scm.com/downloads\" target=\"_blank\" rel=\"noopener\">Git</a><br>安裝<a href=\"https://hexo.io/zh-tw/\" target=\"_blank\" rel=\"noopener\">Hexo</a><br><pre><code class=\"hljs bash\">$ npm install -g hexo-cli</code></pre></p>\n<h2 id=\"建立\"><a href=\"#建立\" class=\"headerlink\" title=\"建立\"></a>建立</h2><p>一旦 Hexo 完成後，請執行下列指令，Hexo 會在指定資料夾中建立所有您需要的檔案。<br><pre><code class=\"hljs bash\">$ hexo init blog\n$ <span class=\"hljs-built_in\">cd</span> blog\n$ npm install</code></pre></p>\n<h3 id=\"建立一篇新的文章\"><a href=\"#建立一篇新的文章\" class=\"headerlink\" title=\"建立一篇新的文章\"></a>建立一篇新的文章</h3><pre><code class=\"hljs bash\">$ hexo new [layout] &lt;title&gt;</code></pre>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>佈局</th>\n<th>路徑</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>post</td>\n<td>source/_posts</td>\n</tr>\n<tr>\n<td>page</td>\n<td>source</td>\n</tr>\n<tr>\n<td>draft</td>\n<td>source/_drafts</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"產生靜態檔案\"><a href=\"#產生靜態檔案\" class=\"headerlink\" title=\"產生靜態檔案\"></a>產生靜態檔案</h3><pre><code class=\"hljs bash\">$ hexo generate</code></pre>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-d, —deploy</td>\n<td>產生完成即部署網站</td>\n</tr>\n<tr>\n<td>-w, —watch</td>\n<td>監看檔案變更</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"啟動伺服器\"><a href=\"#啟動伺服器\" class=\"headerlink\" title=\"啟動伺服器\"></a>啟動伺服器</h3><p>預設為 <a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a><br><pre><code class=\"hljs bash\">$ hexo server</code></pre></p>\n<h3 id=\"部署網站到Git\"><a href=\"#部署網站到Git\" class=\"headerlink\" title=\"部署網站到Git\"></a>部署網站到Git</h3><p>可以直接使用git命令部署，將 <code>public</code> 資料夾裏的文件複製到git目錄下，之後使用 <code>git commit</code><br><pre><code class=\"hljs bash\">$ hexo generate\n\n$ git add .\n$ git commit -m <span class=\"hljs-string\">\"update\"</span>\n$ git push origin master</code></pre></p>\n<h3 id=\"Clean\"><a href=\"#Clean\" class=\"headerlink\" title=\"Clean\"></a>Clean</h3><pre><code class=\"hljs bash\">$ hexo clean</code></pre>\n<h3 id=\"列出網站資料\"><a href=\"#列出網站資料\" class=\"headerlink\" title=\"列出網站資料\"></a>列出網站資料</h3><pre><code class=\"hljs bash\">$ hexo list &lt;<span class=\"hljs-built_in\">type</span>&gt;</code></pre>\n<h3 id=\"顯示版本咨詢\"><a href=\"#顯示版本咨詢\" class=\"headerlink\" title=\"顯示版本咨詢\"></a>顯示版本咨詢</h3><pre><code class=\"hljs bash\">$ hexo version</code></pre>\n<h2 id=\"更換主題\"><a href=\"#更換主題\" class=\"headerlink\" title=\"更換主題\"></a>更換主題</h2><p>在 <code>themes</code> 資料夾內，新增一個資料夾，並修改 <code>_config.yml</code> 內的 <code>theme</code> 設定，即可切換主題</p>\n<h2 id=\"渲染公式\"><a href=\"#渲染公式\" class=\"headerlink\" title=\"渲染公式\"></a>渲染公式</h2><p>更換 markdown 渲染引擎</p>\n<pre><code class=\"hljs undefined\">npm <span class=\"hljs-keyword\">uninstall</span> hexo-renderer-marked <span class=\"hljs-comment\">--save</span>\nnpm <span class=\"hljs-keyword\">install</span> hexo-renderer-kramed <span class=\"hljs-comment\">--save</span></code></pre>\n<p>修改 node_modules/kramed/lib/rules/inline.js</p>\n<p>注意註釋部分</p>\n<pre><code class=\"hljs undefined\">var inline = &#123;\n  // escape: /^<span class=\"hljs-symbol\">\\\\</span>([<span class=\"hljs-symbol\">\\\\</span>`*&#123;&#125;<span class=\"hljs-symbol\">\\[</span><span class=\"hljs-symbol\">\\]</span>()#$+<span class=\"hljs-symbol\">\\-</span>.!_&gt;])/,\n  escape: /^<span class=\"hljs-symbol\">\\\\</span>([`*<span class=\"hljs-symbol\">\\[</span><span class=\"hljs-symbol\">\\]</span>()#$+<span class=\"hljs-symbol\">\\-</span>.!_&gt;])/,\n  autolink: /^&lt;([^ &gt;]+(@|:<span class=\"hljs-symbol\">\\/</span>)[^ &gt;]+)&gt;/,\n  url: noop,\n  html: /^&lt;!--[<span class=\"hljs-symbol\">\\s</span><span class=\"hljs-symbol\">\\S</span>]*?--&gt;|^&lt;(<span class=\"hljs-symbol\">\\w</span>+(?!:<span class=\"hljs-symbol\">\\/</span>|[^<span class=\"hljs-symbol\">\\w</span><span class=\"hljs-symbol\">\\s</span>@]*@)<span class=\"hljs-symbol\">\\b</span>)*?(?:\"[^\"]*\"|'[^']*'|[^'\"&gt;])*?&gt;([<span class=\"hljs-symbol\">\\s</span><span class=\"hljs-symbol\">\\S</span>]*?)?&lt;<span class=\"hljs-symbol\">\\/</span><span class=\"hljs-symbol\">\\1</span>&gt;|^&lt;(<span class=\"hljs-symbol\">\\w</span>+(?!:<span class=\"hljs-symbol\">\\/</span>|[^<span class=\"hljs-symbol\">\\w</span><span class=\"hljs-symbol\">\\s</span>@]*@)<span class=\"hljs-symbol\">\\b</span>)(?:\"[^\"]*\"|'[^']*'|[^'\"&gt;])*?&gt;/,\n  link: /^!?<span class=\"hljs-symbol\">\\[</span>(inside)<span class=\"hljs-symbol\">\\]</span><span class=\"hljs-symbol\">\\(</span>href<span class=\"hljs-symbol\">\\)</span>/,\n  reflink: /^!?<span class=\"hljs-symbol\">\\[</span>(inside)<span class=\"hljs-symbol\">\\]</span><span class=\"hljs-symbol\">\\s</span>*<span class=\"hljs-symbol\">\\[</span>([^<span class=\"hljs-symbol\">\\]</span>]*)<span class=\"hljs-symbol\">\\]</span>/,\n  nolink: /^!?<span class=\"hljs-symbol\">\\[</span>((?:<span class=\"hljs-symbol\">\\[</span>[^<span class=\"hljs-symbol\">\\]</span>]*<span class=\"hljs-symbol\">\\]</span>|[^<span class=\"hljs-symbol\">\\[</span><span class=\"hljs-symbol\">\\]</span>])*)<span class=\"hljs-symbol\">\\]</span>/,\n  reffn: /^!?<span class=\"hljs-symbol\">\\[</span><span class=\"hljs-symbol\">\\^</span>(inside)<span class=\"hljs-symbol\">\\]</span>/,\n  strong: /^__([<span class=\"hljs-symbol\">\\s</span><span class=\"hljs-symbol\">\\S</span>]+?)__(?!_)|^<span class=\"hljs-symbol\">\\*</span><span class=\"hljs-symbol\">\\*</span>([<span class=\"hljs-symbol\">\\s</span><span class=\"hljs-symbol\">\\S</span>]+?)<span class=\"hljs-symbol\">\\*</span><span class=\"hljs-symbol\">\\*</span>(?!<span class=\"hljs-symbol\">\\*</span>)/,\n  // em: /^<span class=\"hljs-symbol\">\\b</span>_((?:__|[<span class=\"hljs-symbol\">\\s</span><span class=\"hljs-symbol\">\\S</span>])+?)_<span class=\"hljs-symbol\">\\b</span>|^<span class=\"hljs-symbol\">\\*</span>((?:<span class=\"hljs-symbol\">\\*</span><span class=\"hljs-symbol\">\\*</span>|[<span class=\"hljs-symbol\">\\s</span><span class=\"hljs-symbol\">\\S</span>])+?)<span class=\"hljs-symbol\">\\*</span>(?!<span class=\"hljs-symbol\">\\*</span>)/,\n  em: /^<span class=\"hljs-symbol\">\\*</span>((?:<span class=\"hljs-symbol\">\\*</span><span class=\"hljs-symbol\">\\*</span>|[<span class=\"hljs-symbol\">\\s</span><span class=\"hljs-symbol\">\\S</span>])+?)<span class=\"hljs-symbol\">\\*</span>(?!<span class=\"hljs-symbol\">\\*</span>)/,\n  code: /^(`+)<span class=\"hljs-symbol\">\\s</span>*([<span class=\"hljs-symbol\">\\s</span><span class=\"hljs-symbol\">\\S</span>]*?[^`])<span class=\"hljs-symbol\">\\s</span>*<span class=\"hljs-symbol\">\\1</span>(?!`)/,\n  br: /^ &#123;2,&#125;<span class=\"hljs-symbol\">\\n</span>(?!<span class=\"hljs-symbol\">\\s</span>*$)/,\n  del: noop,\n  text: /^[<span class=\"hljs-symbol\">\\s</span><span class=\"hljs-symbol\">\\S</span>]+?(?=[<span class=\"hljs-symbol\">\\\\</span>&lt;!<span class=\"hljs-symbol\">\\[</span>_*`$]| &#123;2,&#125;<span class=\"hljs-symbol\">\\n</span>|$)/,\n  math: /^<span class=\"hljs-symbol\">\\$</span><span class=\"hljs-symbol\">\\$</span><span class=\"hljs-symbol\">\\s</span>*([<span class=\"hljs-symbol\">\\s</span><span class=\"hljs-symbol\">\\S</span>]*?[^<span class=\"hljs-symbol\">\\$</span>])<span class=\"hljs-symbol\">\\s</span>*<span class=\"hljs-symbol\">\\$</span><span class=\"hljs-symbol\">\\$</span>(?!<span class=\"hljs-symbol\">\\$</span>)/,\n&#125;;</code></pre>\n<p>在主題中開啓 mathjax</p>\n<p>在 themes/xxx/_config.yml</p>\n<p>一般</p>\n<pre><code class=\"hljs undefined\"><span class=\"hljs-attr\">math:</span>\n  <span class=\"hljs-attr\">enable:</span> <span class=\"hljs-literal\">true</span>\n  <span class=\"hljs-attr\">per_page:</span> <span class=\"hljs-literal\">true</span>\n  <span class=\"hljs-attr\">engine:</span> <span class=\"hljs-string\">mathjax</span></code></pre>\n<p>在需要渲染公式的文章的 Fornt-matter 中打開 mathjax</p>\n<pre><code class=\"hljs undefined\"><span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">mathjax:</span> <span class=\"hljs-literal\">true</span>\n<span class=\"hljs-string\">--</span></code></pre>","site":{"data":{}},"excerpt":"<p>本站搭建過程（已過氣）<br>","more":"</p>\n<h2 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h2><p>安裝<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">Node.js</a><br>更換爲國內源，安裝 cnpm</p>\n<pre><code class=\"hljs undefined\"><span class=\"hljs-symbol\">$</span> npm config <span class=\"hljs-keyword\">set</span> registry <span class=\"hljs-comment\">https:</span>//<span class=\"hljs-comment\">registry.npm.taobao.org</span>\n$ npm <span class=\"hljs-comment\">config get registry</span>\n\n$ npm <span class=\"hljs-comment\">install -g cnpm</span>\n$ cmpm <span class=\"hljs-comment\">install hexo</span></code></pre>\n<p>安裝<a href=\"https://git-scm.com/downloads\" target=\"_blank\" rel=\"noopener\">Git</a><br>安裝<a href=\"https://hexo.io/zh-tw/\" target=\"_blank\" rel=\"noopener\">Hexo</a><br><pre><code class=\"hljs bash\">$ npm install -g hexo-cli</code></pre></p>\n<h2 id=\"建立\"><a href=\"#建立\" class=\"headerlink\" title=\"建立\"></a>建立</h2><p>一旦 Hexo 完成後，請執行下列指令，Hexo 會在指定資料夾中建立所有您需要的檔案。<br><pre><code class=\"hljs bash\">$ hexo init blog\n$ <span class=\"hljs-built_in\">cd</span> blog\n$ npm install</code></pre></p>\n<h3 id=\"建立一篇新的文章\"><a href=\"#建立一篇新的文章\" class=\"headerlink\" title=\"建立一篇新的文章\"></a>建立一篇新的文章</h3><pre><code class=\"hljs bash\">$ hexo new [layout] &lt;title&gt;</code></pre>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>佈局</th>\n<th>路徑</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>post</td>\n<td>source/_posts</td>\n</tr>\n<tr>\n<td>page</td>\n<td>source</td>\n</tr>\n<tr>\n<td>draft</td>\n<td>source/_drafts</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"產生靜態檔案\"><a href=\"#產生靜態檔案\" class=\"headerlink\" title=\"產生靜態檔案\"></a>產生靜態檔案</h3><pre><code class=\"hljs bash\">$ hexo generate</code></pre>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>選項</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-d, —deploy</td>\n<td>產生完成即部署網站</td>\n</tr>\n<tr>\n<td>-w, —watch</td>\n<td>監看檔案變更</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"啟動伺服器\"><a href=\"#啟動伺服器\" class=\"headerlink\" title=\"啟動伺服器\"></a>啟動伺服器</h3><p>預設為 <a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a><br><pre><code class=\"hljs bash\">$ hexo server</code></pre></p>\n<h3 id=\"部署網站到Git\"><a href=\"#部署網站到Git\" class=\"headerlink\" title=\"部署網站到Git\"></a>部署網站到Git</h3><p>可以直接使用git命令部署，將 <code>public</code> 資料夾裏的文件複製到git目錄下，之後使用 <code>git commit</code><br><pre><code class=\"hljs bash\">$ hexo generate\n\n$ git add .\n$ git commit -m <span class=\"hljs-string\">\"update\"</span>\n$ git push origin master</code></pre></p>\n<h3 id=\"Clean\"><a href=\"#Clean\" class=\"headerlink\" title=\"Clean\"></a>Clean</h3><pre><code class=\"hljs bash\">$ hexo clean</code></pre>\n<h3 id=\"列出網站資料\"><a href=\"#列出網站資料\" class=\"headerlink\" title=\"列出網站資料\"></a>列出網站資料</h3><pre><code class=\"hljs bash\">$ hexo list &lt;<span class=\"hljs-built_in\">type</span>&gt;</code></pre>\n<h3 id=\"顯示版本咨詢\"><a href=\"#顯示版本咨詢\" class=\"headerlink\" title=\"顯示版本咨詢\"></a>顯示版本咨詢</h3><pre><code class=\"hljs bash\">$ hexo version</code></pre>\n<h2 id=\"更換主題\"><a href=\"#更換主題\" class=\"headerlink\" title=\"更換主題\"></a>更換主題</h2><p>在 <code>themes</code> 資料夾內，新增一個資料夾，並修改 <code>_config.yml</code> 內的 <code>theme</code> 設定，即可切換主題</p>\n<h2 id=\"渲染公式\"><a href=\"#渲染公式\" class=\"headerlink\" title=\"渲染公式\"></a>渲染公式</h2><p>更換 markdown 渲染引擎</p>\n<pre><code class=\"hljs undefined\">npm <span class=\"hljs-keyword\">uninstall</span> hexo-renderer-marked <span class=\"hljs-comment\">--save</span>\nnpm <span class=\"hljs-keyword\">install</span> hexo-renderer-kramed <span class=\"hljs-comment\">--save</span></code></pre>\n<p>修改 node_modules/kramed/lib/rules/inline.js</p>\n<p>注意註釋部分</p>\n<pre><code class=\"hljs undefined\">var inline = &#123;\n  // escape: /^<span class=\"hljs-symbol\">\\\\</span>([<span class=\"hljs-symbol\">\\\\</span>`*&#123;&#125;<span class=\"hljs-symbol\">\\[</span><span class=\"hljs-symbol\">\\]</span>()#$+<span class=\"hljs-symbol\">\\-</span>.!_&gt;])/,\n  escape: /^<span class=\"hljs-symbol\">\\\\</span>([`*<span class=\"hljs-symbol\">\\[</span><span class=\"hljs-symbol\">\\]</span>()#$+<span class=\"hljs-symbol\">\\-</span>.!_&gt;])/,\n  autolink: /^&lt;([^ &gt;]+(@|:<span class=\"hljs-symbol\">\\/</span>)[^ &gt;]+)&gt;/,\n  url: noop,\n  html: /^&lt;!--[<span class=\"hljs-symbol\">\\s</span><span class=\"hljs-symbol\">\\S</span>]*?--&gt;|^&lt;(<span class=\"hljs-symbol\">\\w</span>+(?!:<span class=\"hljs-symbol\">\\/</span>|[^<span class=\"hljs-symbol\">\\w</span><span class=\"hljs-symbol\">\\s</span>@]*@)<span class=\"hljs-symbol\">\\b</span>)*?(?:\"[^\"]*\"|'[^']*'|[^'\"&gt;])*?&gt;([<span class=\"hljs-symbol\">\\s</span><span class=\"hljs-symbol\">\\S</span>]*?)?&lt;<span class=\"hljs-symbol\">\\/</span><span class=\"hljs-symbol\">\\1</span>&gt;|^&lt;(<span class=\"hljs-symbol\">\\w</span>+(?!:<span class=\"hljs-symbol\">\\/</span>|[^<span class=\"hljs-symbol\">\\w</span><span class=\"hljs-symbol\">\\s</span>@]*@)<span class=\"hljs-symbol\">\\b</span>)(?:\"[^\"]*\"|'[^']*'|[^'\"&gt;])*?&gt;/,\n  link: /^!?<span class=\"hljs-symbol\">\\[</span>(inside)<span class=\"hljs-symbol\">\\]</span><span class=\"hljs-symbol\">\\(</span>href<span class=\"hljs-symbol\">\\)</span>/,\n  reflink: /^!?<span class=\"hljs-symbol\">\\[</span>(inside)<span class=\"hljs-symbol\">\\]</span><span class=\"hljs-symbol\">\\s</span>*<span class=\"hljs-symbol\">\\[</span>([^<span class=\"hljs-symbol\">\\]</span>]*)<span class=\"hljs-symbol\">\\]</span>/,\n  nolink: /^!?<span class=\"hljs-symbol\">\\[</span>((?:<span class=\"hljs-symbol\">\\[</span>[^<span class=\"hljs-symbol\">\\]</span>]*<span class=\"hljs-symbol\">\\]</span>|[^<span class=\"hljs-symbol\">\\[</span><span class=\"hljs-symbol\">\\]</span>])*)<span class=\"hljs-symbol\">\\]</span>/,\n  reffn: /^!?<span class=\"hljs-symbol\">\\[</span><span class=\"hljs-symbol\">\\^</span>(inside)<span class=\"hljs-symbol\">\\]</span>/,\n  strong: /^__([<span class=\"hljs-symbol\">\\s</span><span class=\"hljs-symbol\">\\S</span>]+?)__(?!_)|^<span class=\"hljs-symbol\">\\*</span><span class=\"hljs-symbol\">\\*</span>([<span class=\"hljs-symbol\">\\s</span><span class=\"hljs-symbol\">\\S</span>]+?)<span class=\"hljs-symbol\">\\*</span><span class=\"hljs-symbol\">\\*</span>(?!<span class=\"hljs-symbol\">\\*</span>)/,\n  // em: /^<span class=\"hljs-symbol\">\\b</span>_((?:__|[<span class=\"hljs-symbol\">\\s</span><span class=\"hljs-symbol\">\\S</span>])+?)_<span class=\"hljs-symbol\">\\b</span>|^<span class=\"hljs-symbol\">\\*</span>((?:<span class=\"hljs-symbol\">\\*</span><span class=\"hljs-symbol\">\\*</span>|[<span class=\"hljs-symbol\">\\s</span><span class=\"hljs-symbol\">\\S</span>])+?)<span class=\"hljs-symbol\">\\*</span>(?!<span class=\"hljs-symbol\">\\*</span>)/,\n  em: /^<span class=\"hljs-symbol\">\\*</span>((?:<span class=\"hljs-symbol\">\\*</span><span class=\"hljs-symbol\">\\*</span>|[<span class=\"hljs-symbol\">\\s</span><span class=\"hljs-symbol\">\\S</span>])+?)<span class=\"hljs-symbol\">\\*</span>(?!<span class=\"hljs-symbol\">\\*</span>)/,\n  code: /^(`+)<span class=\"hljs-symbol\">\\s</span>*([<span class=\"hljs-symbol\">\\s</span><span class=\"hljs-symbol\">\\S</span>]*?[^`])<span class=\"hljs-symbol\">\\s</span>*<span class=\"hljs-symbol\">\\1</span>(?!`)/,\n  br: /^ &#123;2,&#125;<span class=\"hljs-symbol\">\\n</span>(?!<span class=\"hljs-symbol\">\\s</span>*$)/,\n  del: noop,\n  text: /^[<span class=\"hljs-symbol\">\\s</span><span class=\"hljs-symbol\">\\S</span>]+?(?=[<span class=\"hljs-symbol\">\\\\</span>&lt;!<span class=\"hljs-symbol\">\\[</span>_*`$]| &#123;2,&#125;<span class=\"hljs-symbol\">\\n</span>|$)/,\n  math: /^<span class=\"hljs-symbol\">\\$</span><span class=\"hljs-symbol\">\\$</span><span class=\"hljs-symbol\">\\s</span>*([<span class=\"hljs-symbol\">\\s</span><span class=\"hljs-symbol\">\\S</span>]*?[^<span class=\"hljs-symbol\">\\$</span>])<span class=\"hljs-symbol\">\\s</span>*<span class=\"hljs-symbol\">\\$</span><span class=\"hljs-symbol\">\\$</span>(?!<span class=\"hljs-symbol\">\\$</span>)/,\n&#125;;</code></pre>\n<p>在主題中開啓 mathjax</p>\n<p>在 themes/xxx/_config.yml</p>\n<p>一般</p>\n<pre><code class=\"hljs undefined\"><span class=\"hljs-attr\">math:</span>\n  <span class=\"hljs-attr\">enable:</span> <span class=\"hljs-literal\">true</span>\n  <span class=\"hljs-attr\">per_page:</span> <span class=\"hljs-literal\">true</span>\n  <span class=\"hljs-attr\">engine:</span> <span class=\"hljs-string\">mathjax</span></code></pre>\n<p>在需要渲染公式的文章的 Fornt-matter 中打開 mathjax</p>\n<pre><code class=\"hljs undefined\"><span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">mathjax:</span> <span class=\"hljs-literal\">true</span>\n<span class=\"hljs-string\">--</span></code></pre>"}],"PostAsset":[],"PostCategory":[{"post_id":"cke6ns1pa00151wk264kfwn37","category_id":"cke6ndi3w00021wk2i2cb18tl","_id":"cke6ns1pd00181wk2q40q1ved"},{"post_id":"cke6nsqc200191wk2yrca8ccz","category_id":"cke6ndi3w00021wk2i2cb18tl","_id":"cke6nsqc3001a1wk2b5fac57i"},{"post_id":"cke6nt2ac001b1wk2y8d0xax8","category_id":"cke6ndi3w00021wk2i2cb18tl","_id":"cke6nt2ad001d1wk21px1jpvt"}],"PostTag":[{"post_id":"cke6ns1pa00151wk264kfwn37","tag_id":"cke6ndi3y00031wk2fg478sx7","_id":"cke6ns1pc00161wk2uxs8ta0d"},{"post_id":"cke6ns1pa00151wk264kfwn37","tag_id":"cke6ndi4300081wk2g1hcubm0","_id":"cke6ns1pd00171wk2n16vl99r"},{"post_id":"cke6nt2ac001b1wk2y8d0xax8","tag_id":"cke6nzki2001l1wk24fqycv34","_id":"cke6nzki2001m1wk2e6hsta08"},{"post_id":"cke6nsqc200191wk2yrca8ccz","tag_id":"cke6o13rp001n1wk2bnda6fuh","_id":"cke6o13rp001o1wk2hg5hva8s"}],"Tag":[{"name":"數學","_id":"cke6ndi3y00031wk2fg478sx7"},{"name":"高效能運算","_id":"cke6ndi4300081wk2g1hcubm0"},{"name":"樹莓派","_id":"cke6ndi48000d1wk2ukt4nawh"},{"name":"計算機","_id":"cke6ndi4c000j1wk2jqtlq8c4"},{"name":"web","_id":"cke6ndi4f000t1wk2w07hrdau"},{"name":"遊戲","_id":"cke6ndi4h000y1wk2q2nqnii6"},{"name":"Web","_id":"cke6nzki2001l1wk24fqycv34"},{"name":"演算法","_id":"cke6o13rp001n1wk2bnda6fuh"}]}}