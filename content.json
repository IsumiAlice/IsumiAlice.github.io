{"meta":{"title":"死体的部落格","subtitle":null,"description":"装作咸鱼的咸鱼","author":"死体菌","url":""},"pages":[{"title":"about me","date":"2020-06-16T15:27:43.000Z","updated":"2020-08-18T15:21:04.944Z","comments":true,"path":"about/index.html","permalink":"/about/index.html","excerpt":"","text":"社畜, 宅男, 站着尿尿神教教主 會許多數學的計算機碩士 圖形學, 高效能運算, 基礎數學, 機器學習 目前在深圳划水 前端知識基本為〇, 所以本部落格大部分都是照搬他人的程式碼 喜歡遊戲, 小說, 甜食, 宇宙, 美少女 最近愛上了刷馬桶和做三分鐘咖喱 夢想是和外星美少女戀愛 郵箱：isumialice@foxmail.com QQ：1261492496 部落格大事記2020-8-18 將原程式碼上傳到 source 分支由於大部分技術內容都放到 yuque 上了，這個部落格以後就發些胡言亂語吧 2020-6-17 重新回到 Hexo + Sakura 的靜態頁面 2020-4-1 將技術相關的內容轉移到了 yuque 知識庫上：https://www.yuque.com/isumiai"},{"title":"categories","date":"2020-08-18T15:17:29.000Z","updated":"2020-08-18T15:17:30.074Z","comments":true,"path":"categories/index.html","permalink":"/categories/index.html","excerpt":"","text":""},{"title":"search","date":"2020-08-18T14:44:33.551Z","updated":"2020-08-18T14:38:07.260Z","comments":false,"path":"search/index.html","permalink":"/search/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-08-18T15:16:56.000Z","updated":"2020-08-18T15:16:59.451Z","comments":true,"path":"tags/index.html","permalink":"/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Arm PL 環境配置","slug":"Arm-PL","date":"2020-04-19T13:51:50.000Z","updated":"2020-08-18T15:19:13.467Z","comments":true,"path":"2020/04/19/Arm-PL/","link":"","permalink":"/2020/04/19/Arm-PL/","excerpt":"","text":"Arm Performance Libraries 作為 Linux 的 Arm Compiler 的一部分安裝，並且需要 Arm Allinea Studio 許可證 LicenseArm Allinea Studio 工具套件為在 Arm 硬體上開發 HPC 應用程式提供了完整的解決方案。 它包括： Arm C/C ++/Fortran 編譯器 ArmPL Arm Forge（Arm DDT，Arm MAP和Arm Performance Reports） 需要許可證來使用這些工具。 有兩種許可證， Named User 和 Floating 在獲得許可證後，按照以下說明將其新增到系統中： Add a named user license 在 /opt/arm/ 目錄中建立一個名為 licenses 的目錄 將許可證檔案複製到 /opt/arm/licenses 目錄；如果選擇將許可證檔案放在其他位置，則必須將 ARM_LICENSE_DIR 環境變數設定為指向它 export ARM_LICENSE_DIR=/opt/arm/licenses Arm Forge 和 Arm Performance Reports 在其特定的安裝目錄中搜索許可證。如果使用的是 Arm Allinea Studio 許可證，並且沒有為這些工具使用單獨的許可證，請設定 ALLINEA_LICENSE_DIR 環境變數以將這些工具指向您的 Arm Allinea Studio 許可證 export ALLINEA_LICENSE_DIR=/opt/arm/licenses &gt; named user license，無需安裝Arm License Server Setting up a floating license必須下載並安裝 Arm License Server 浮動許可證由伺服器許可證檔案和客戶端許可證檔案組成，在這裡申請 檢查客戶端許可證是否包含執行Arm License Server的計算機的主機名或IP地址 將客戶端許可證新增到安裝 Arm Allinea Studio 的計算機上。在 /opt/arm 目錄中建立一個名為 licenses 的目錄 同 named 同 named 將伺服器許可證檔案新增到安裝 Arm License Server 的計算機上。在 /opt/arm/licenceserver 目錄中建立一個名為 licenses 的目錄，並將您的許可證檔案複製到該目錄中 重新啟動 Arm License Server 下載Arm Allinea Studio downloads page 安裝需要 python &gt;= 2.7 需要 C Libraries：SUSE and RHEL: glibc-devel Ubuntu: libc6-dev 解壓縮 tar -xvf .tar.gz cd 預設配置安裝 sudo ./.sh可以自定義 options 安裝程式將顯示EULA並提示您同意條款 接下來主要介紹 ArmPL 的配置和使用 配置 檢視可用的環境模組 module avail 可能需要配置MODULEPATH環境變數以包含安裝目錄 export MODULEPATH=$MODULEPATH:/opt/arm/modulefiles/ 為您使用的編譯器載入適當的模組，如果使用的是用於Linux的Arm Compiler，則建議僅載入編譯器模組，如果使用gcc，則必須載入所需的特定Arm Performance Libraries模組module load Generic-AArch64/RHEL/7/arm-linux-compiler/20.0如果使用gcc編譯器，請確保載入正確的模組module load Generic-AArch64/RHEL/7/gcc-9.2.0/armpl/20.0.0Tips: 可以考慮將模組載入命令新增到您的.profile中，以在每次登入時自動執行它 根據使用的編譯器，使用以下命令檢查環境| Compiler | Command || ———— | —————- || armclang | which armclang || gcc | which gcc | 舉個例子ArmPL 包含許多示例程式，如果是預設安裝的，位置在/opt/arm//examples/ 這裡以 fftw_dft_r2c_1d_c_example.c 為例，具體做什麼就不看了 編譯和連結的選項：-armpl: 與arm編譯器進行編譯和連結時-mcpu = native: 允許編譯器從主機系統推斷要使用的庫-L\\lib: 新增庫搜尋路徑-larmpl_lp64: 連結到Arm Performance Libraries-lgfortran: 連結到 gcc Fortran 執行庫-lm: 連結到標準數學庫 編譯原始碼，生成一個目標檔案| Compiler | Command || ———— | ———————— || armclang | armclang -c -armpl -mcpu=native fftw_dft_r2c_1d_c_example.c -o fftw_dft_r2c_1d_c_example.o || gcc | gcc -c -I/include fftw_dft_r2c_1d_c_example.c -o fftw_dft_r2c_1d_c_example.o | 將目的碼連結到可執行檔案中| Compiler | Command || ———— | ————————- || armclang | armclang fftw_dft_r2c_1d_c_example.o -o fftw_dft_r2c_1d_c_example.exe -armpl -mcpu=native -lm || gcc | gcc fftw_dft_r2c_1d_c_example.o -L/lib -o fftw_dft_r2c_1d_c_example.exe -larmpl_lp64 -lgfortran -lm | 在Arm系統上執行可執行檔案 ./fftw_dft_r2c_1d_c_example.exe可以看到相應的輸出 Compile and test the examples examples目錄包含以下內容： 一個GNUmakefile，用於生成和執行所有示例程式 C 原始碼 .c Fortran原始碼 .f90 每個示例的預期輸出 .expected Makefile編譯並執行每個示例，然後將生成的輸出與預期的輸出進行比較。任何差異都會標記為錯誤","categories":[{"name":"技術","slug":"技術","permalink":"/categories/技術/"}],"tags":[{"name":"數學","slug":"數學","permalink":"/tags/數學/"},{"name":"高效能運算","slug":"高效能運算","permalink":"/tags/高效能運算/"}],"keywords":[{"name":"技術","slug":"技術","permalink":"/categories/技術/"}]},{"title":"使用 Windows 時經常遇到的問題","slug":"Windows-puu","date":"2020-03-10T14:50:37.000Z","updated":"2020-08-18T15:20:22.592Z","comments":true,"path":"2020/03/10/Windows-puu/","link":"","permalink":"/2020/03/10/Windows-puu/","excerpt":"","text":"更換主機板如果拆不下散熱器和主機板的螺絲，就用力一點！！！主機板的電源綫要插牢固 OneDrive 右鍵釋放空間簡單的方法可以把使用者賬戶控制設為預設值 如果上面的方法失敗： win+r -&gt; gpedit.msc 打開本機群組原則編輯器 重啓 更換主硬盤遷移系統PartAssist.exe，很好用 睡眠問題睡眠後螢幕關閉，但滑鼠亮著，機箱風扇也在工作 解決方法：把登録編輯程式的 AwayModeEnable 設定為 0 位置在：電腦\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Power 如果Windows無法安裝到指定磁盤 shift+F10 diskpart list disk select disk Clean 若需要 convert mbr 卓越性能模式管理員運行 Windows Powershell powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61 應用程式自啓動 windows - 執行(run) - shell:startup - 確定 - 將要開機啓動的程式捷徑放入即可 禁用筆電自帶的鍵盤 設備管理器 鍵盤-PS/2 右鍵-更新驅動 瀏覽計算機查找驅動 從計算機的驅動列表選擇 取消選擇-顯示兼容硬體 隨便選一個其他品牌驅動 是-重啓","categories":[{"name":"技術","slug":"技術","permalink":"/categories/技術/"}],"tags":[{"name":"計算機","slug":"計算機","permalink":"/tags/計算機/"}],"keywords":[{"name":"技術","slug":"技術","permalink":"/categories/技術/"}]},{"title":"Raspberry 配置 ASF","slug":"Raspberry-ASF","date":"2020-03-04T12:10:48.000Z","updated":"2020-08-18T15:19:55.351Z","comments":true,"path":"2020/03/04/Raspberry-ASF/","link":"","permalink":"/2020/03/04/Raspberry-ASF/","excerpt":"","text":"首先在國內網路下要保證配置好了代理服務 (參見之前的 Raspberry Hello) ASF Git 頁面: https://github.com/JustArchiNET/ArchiSteamFarm Setting up 頁面: https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Setting-up-zh-CN 在 release 頁面下載相應壓縮檔, 一般來說選 linux-arm 安裝相關依賴套件名稱取決於您正在使用的 Linux 發行版，我們已經列出了最常見的套件。 您可以使用本地套件管理系統，為您的作業系統取得全部套件（例如 Debian 的 apt 或 CentOS 的 yum）。 libcurl（libcurl4、libcurl3） libicu（您的 Linux 發行版的最新版本，例如 libicu60） libkrb5-3（krb5-libs） liblttng-ust0（lttng-ust） libssl（libssl1.1、openssl-libs、您的 Linux 發行版最新的 1.1.X 版本） zlib1g（zlib） 其中至少應該有幾個套件已經可用於您的系統本地了（例如現今幾乎每一個 Linux 發行版都需要 zlib1g）。 配置在 網頁設定檔產生器 頁面配置一個 ASF 和一個 Bot 然後放入 config 資料夾中 修改權限 chmod +x ArchiSteamFarm 然後 ./ArchiSteamFarm 執行 若需要代理則在前面添加 proxychains","categories":[{"name":"技術","slug":"技術","permalink":"/categories/技術/"}],"tags":[{"name":"樹莓派","slug":"樹莓派","permalink":"/tags/樹莓派/"}],"keywords":[{"name":"技術","slug":"技術","permalink":"/categories/技術/"}]},{"title":"Raspberry 基礎配置","slug":"Raspberry-hello","date":"2020-02-29T14:26:47.000Z","updated":"2020-08-18T15:20:01.145Z","comments":true,"path":"2020/02/29/Raspberry-hello/","link":"","permalink":"/2020/02/29/Raspberry-hello/","excerpt":"","text":"寫入系統到存儲卡中在通電前, 要先把系統搞定 官方下載站: http://www.raspberrypi.org/downloads 格式化工具: SDFormatter 寫入工具: Win32DiskImager 注意寫入過程中不要點格式化 默認登入名為 pi, pw: raspberry root pw: raspberry 硬體裝配把主板從盒子取出來 插入裝有系統的存儲卡 連接電源, HDMI, 網綫, 鍵鼠 插入電源後即直接進入系統 系統配備以下配備均是在官方系統下操作的 root由pi用戶登録後 sudo passwd root sudo passwd --unlock root 更換為國內 sourcesudo nano /etc/apt/sources.list 添加 deb http://mirrors.aliyun.com/raspbian/raspbian/ buster main contrib non-free rpi deb-src http://mirrors.aliyun.com/raspbian/raspbian/ buster main contrib non-free rpi 更新 sudo apt-get update 配置中文安裝中文字庫 sudo apt-get install ttf-wqy-zenhei 輸入法 sudo apt-get install fcitx fcitx-googlepinyin fcitx-module-cloudpinyin fcitx-sunpinyin 配置中文 sudo raspi-config - 4 Localisation - I1 Change Locale 選擇 zh_CN GB2312, zh_CN.GB18030 GB18030, zh_CN.GBK GBK, zh_CN.UTF-8 UTF-8, zh_CN.UTF-8 Enter - sudo reboot 重啓後打開設置, Localisation - SetLocal - CharacterSet - GB18030 - OK 之後會提示重啓 - Yes 配置中文輸入法 Fcitx配置 - 左下角加好 - 選擇需要的 固定 IPsudo nano /etc/dhcpcd.conf 然後自己看着辦 開啓 SSHsudo raspi-config - Interfacing Options - SSH 系統備份, 還原在 Windows 下可以創建一個空的.img資料, 然後插入存儲卡, 使用 Win32 Disk Imager 的 Read 功能. 會將整張卡進行備份. 配置代理服務安裝 SSsudo apt-get install shadowsocks or sudo pip install shadowsocks 配置 SS 參數 sudo vi /etc/shadowsocks/config.json { &quot;server&quot;: , &quot;server_port&quot;: , &quot;local_address&quot;: &quot;127.0.0.1&quot;, &quot;local_port&quot;: &quot;1080&quot;, &quot;password&quot;: , &quot;timeout&quot;: 300, &quot;method&quot;: &quot;aes-256-cfb&quot;, &quot;fast_open&quot;: false, &quot;workers&quot;: 1 } 啓動 apt-get sudo /usr/bin/sslocal -c /etc/shadowsocks/config.json -d start pip sudo /usr/local/bin/sslocal -c /etc/shadowsocks/config.json -d start 開機啓動 su vim /etc/rc.local 最後的 exit 0 的上一行添加 sudo /usr/bin/sslocal -c /etc/shadowsocks/config.json -d start 不同方式安裝的 sslocal 位置可能不同, which sslocal 配置瀏覽器代理下載 SwitchyOmega https://github.com/FelisCatus/SwitchyOmega/releases 打開瀏覽器拓展頁面 chrome://extensions 并拖入 若出現錯誤, 打開瀏覽器頁面右上角開發者模式, 然後解壓縮 release 的包, 瀏覽器中選擇加載已解壓的拓展 配置 SwitchyOmega 的方法 左側 proxy, 修改為 SOCKS5, 127.0.0.1, 1080 auto switch, 添加規則 https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt 配置終端代理使用 proxychains 執行相應命令 sudo apt install proxychains4 sudo vi /etc/proxychains.conf 最後一行添加 socks5 127.0.0.1 1080 并刪除多餘內容 proxychains curl www.google.com 一些基本操作Neofetch 顯示系統信息sudo apt-get install neofetch neofetch 可以修改 ~/.config/neofetch/config.conf 自定義輸出信息 獲取溫度cd /sys/class/thermal/thermal_zone0 cat temp 返回值除以 1000 即為當前 CPU 溫度 設置時區date 查詢系統時間 sudo dpkg-reconfigure tzdata Asia 樹莓派由於沒有電池, 斷電後無法保存時間, 默認通過 NTP 服務獲取時間, 如果時間不準確, 可以 sudo ntpd -s –d 來校準 也可以 sudo date --s=&quot;2018-10-19 14:54:00&quot; 來設置時間","categories":[{"name":"技術","slug":"技術","permalink":"/categories/技術/"}],"tags":[{"name":"樹莓派","slug":"樹莓派","permalink":"/tags/樹莓派/"},{"name":"計算機","slug":"計算機","permalink":"/tags/計算機/"}],"keywords":[{"name":"技術","slug":"技術","permalink":"/categories/技術/"}]},{"title":"Steam 藝術作品展示欄設定","slug":"Steam-bg","date":"2020-01-27T03:06:55.000Z","updated":"2020-08-18T15:20:07.162Z","comments":true,"path":"2020/01/27/Steam-bg/","link":"","permalink":"/2020/01/27/Steam-bg/","excerpt":"","text":"分割個人資料背景https://steam.design/ 瀏覽器中上傳藝術作品選擇圖片 - F12 - Console var num= document.getElementsByName(&quot;image_width&quot;)[0].value; document.getElementsByName(&quot;image_height&quot;)[0].value = num-(num-1); document.getElementsByName(&quot;image_width&quot;)[0].value= num*100; 然後上傳圖片 上傳到熒幕截圖展櫃document.getElementsByName(&quot;file_type&quot;)[0].value= 5; var num= document.getElementsByName(&quot;image_width&quot;)[0].value; document.getElementsByName(&quot;image_height&quot;)[0].value = num-(num-1); document.getElementsByName(&quot;image_width&quot;)[0].value= num*100;","categories":[{"name":"技術","slug":"技術","permalink":"/categories/技術/"}],"tags":[{"name":"遊戲","slug":"遊戲","permalink":"/tags/遊戲/"}],"keywords":[{"name":"技術","slug":"技術","permalink":"/categories/技術/"}]},{"title":"一道情人節的密碼題","slug":"Valentine-pw","date":"2018-08-17T11:18:12.000Z","updated":"2020-08-18T15:20:13.643Z","comments":true,"path":"2018/08/17/Valentine-pw/","link":"","permalink":"/2018/08/17/Valentine-pw/","excerpt":"","text":"七夕快樂哦今天是七夕呢，寫這個的起因是一個同學的女朋友發了個密碼解密給他。這就是今天要解決的問題嘍，當然，先把兩種密碼的相關知識貼上。 凱撒密碼在密碼學中，愷撒密碼（英語：Caesar cipher），或稱愷撒加密、愷撒變換、變換加密，是一種最簡單且最廣為人知的加密技術。它是一種替換加密的技術，明文中的所有字母都在字母表上向後（或向前）按照一個固定數目進行偏移後被替換成密文。例如，當偏移量是3的時候，所有的字母A將被替換成D，B變成E，以此類推。這個加密方法是以羅馬共和時期愷撒的名字命名的，當年愷撒曾用此方法與其將軍們進行聯繫。 愷撒密碼通常被作為其他更複雜的加密方法中的一個步驟，例如維吉尼亞密碼。愷撒密碼還在現代的ROT13系統中被應用。但是和所有的利用字母表進行替換的加密技術一樣，愷撒密碼非常容易被破解，而且在實際應用中也無法保證通信安全。 柵欄密碼所謂柵欄密碼，就是把要加密的明文分成N個一組，然後把每組的第i個字連起來，形成一段無規律的話。 一般比較常見的是2欄的棚欄密碼。比如明文：THERE IS A CIPHER去掉空格後變為：THEREISACIPHER兩個一組，得到：TH ER EI SA CI PH ER先取出第一個字母：TEESCPE再取出第二個字母：HRIAIHR連在一起就是：TEESCPEHRIAIHR這樣就得到我們需要的密碼了！ 而解密的時候，我們先吧密文從中間分開，變為兩行：T E E S C P EH R I A I H R再按上下上下的順序組合起來：THEREISACIPHER分出空格，就可以得到原文了：THERE IS A CIPHER Python 簡單實現十幾行代碼，非常簡單。後面的 for 循環部分應該還能再簡化一點。 import math inp = &#39;cvpgygppjvtgpgfgjgtq&#39; num = -2 step1 = [chr(97 + (ord(x)-97+num)%26) for x in inp] print (step1) num2 = 3 num3 = math.ceil(len(step1)/num2) s2 = [step1[i*num3: (num3*(i+1)) if (num3*(i+1))&lt;len(step1) else len(step1)] for i in range(num2)] print(s2) s3 = [] for j in range(num3): for i in range(num2): try: s3.append(s2[i][j]) except: pass print (s3) &#39;&#39;&#39; and then there were none &#39;&#39;&#39;","categories":[{"name":"技術","slug":"技術","permalink":"/categories/技術/"}],"tags":[],"keywords":[{"name":"技術","slug":"技術","permalink":"/categories/技術/"}]},{"title":"使用 youtube-dl 下載影片","slug":"youtube-dl","date":"2018-02-17T01:34:04.000Z","updated":"2020-08-18T15:20:26.636Z","comments":true,"path":"2018/02/17/youtube-dl/","link":"","permalink":"/2018/02/17/youtube-dl/","excerpt":"","text":"youtube-dl常用命令得到視頻可下載格式列表： youtube-dl -F [url] 下載相應的視頻、音頻並合併： youtube-dl -f 299+140 xxxxxx 自動選擇碼率最高的視頻下載： youtube-dl -f xxxxxx 下載播放隊列： youtube-dl -f 299+140 -o &quot;%(playlist_index)s-%(title)s.%(ext)s&quot; --playlist-start 18 --playlist-end 27 PLVTne6k3-60uJC9V8o3CmGjBj8XreCcqR 安裝pip install --upgrade youtube-dl 在官方網站下載 ffmpeg，解壓縮 環境變數Path中添加ffmpeg\\bin ffmpeg -version VPS端(Linux)配置安裝 youtube-dlsudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl sudo chmod a+rx /usr/local/bin/youtube-dl 安裝 ffmpeg(稍稍稍稍複雜) 安裝 yasm$ tar -xvzf yasm-1.3.0.tar.gz $ cd yasm-1.3.0/ $ ./configure $ make $ make install 下載ffmpeg源碼，並傳入VPS$ tar -xjvf ffmpeg-3.3.1.tar.bz2 $ cd ffmpeg-3.3.1/ $ ./configure --enable-shared --prefix=/monchickey/ffmpeg $ make $ make install 配置一下$ vi /etc/ld.so.conf.d/ffmpeg.conf 添加 /monchickey/ffmpeg/lib 保存退出 $ ldconfig $ cd /monchickey/ffmpeg/bin $ ./ffmpeg -version 可查看版本號 $ vi /etc/profile 末尾添加 export PATH=&quot;/monchickey/ffmpeg/bin:$PATH&quot; 保存退出 $ source /etc/profile 本地下載VPS上的文件 在VPS上開啟臨時HTTP服務器$ python -m SimpleHTTPServer 本地瀏覽器打開 IP:8000 OK了，用瀏覽器愉快的下載相應文件吧 CTRL+C可關閉服務器 也可以netstat -anp | grep 8000查找相應進程如3333/python,然後通過kill -9 3333關閉進程","categories":[{"name":"技術","slug":"技術","permalink":"/categories/技術/"}],"tags":[{"name":"計算機","slug":"計算機","permalink":"/tags/計算機/"}],"keywords":[{"name":"技術","slug":"技術","permalink":"/categories/技術/"}]},{"title":"基於 Hexo 搭建個人靜態部落格","slug":"hello-hexo","date":"2018-01-29T03:00:18.000Z","updated":"2020-08-18T15:18:45.828Z","comments":true,"path":"2018/01/29/hello-hexo/","link":"","permalink":"/2018/01/29/hello-hexo/","excerpt":"","text":"安裝安裝Node.js更換爲國內源，安裝 cnpm $ npm config set registry https://registry.npm.taobao.org $ npm config get registry $ npm install -g cnpm $ cmpm install hexo 安裝Git安裝Hexo $ npm install -g hexo-cli 建立一旦 Hexo 完成後，請執行下列指令，Hexo 會在指定資料夾中建立所有您需要的檔案。 $ hexo init blog $ cd blog $ npm install 建立一篇新的文章$ hexo new [layout] &lt;title&gt; 佈局 路徑 post source/_posts page source draft source/_drafts 產生靜態檔案$ hexo generate 選項 描述 -d, –deploy 產生完成即部署網站 -w, –watch 監看檔案變更 啟動伺服器預設為 http://localhost:4000/ $ hexo server 部署網站到Git可以直接使用git命令部署，將 public 資料夾裏的文件複製到git目錄下，之後使用 git commit $ hexo generate $ git add . $ git commit -m &quot;update&quot; $ git push origin master Clean$ hexo clean 列出網站資料$ hexo list &lt;type&gt; 顯示版本咨詢$ hexo version 更換主題在 themes 資料夾內，新增一個資料夾，並修改 _config.yml 內的 theme 設定，即可切換主題 渲染公式更換 markdown 渲染引擎 npm uninstall hexo-renderer-marked --save npm install hexo-renderer-kramed --save 修改 node_modules/kramed/lib/rules/inline.js 注意註釋部分 var inline = { // escape: /^\\\\([\\\\`*{}\\[\\]()#$+\\-.!_&gt;])/, escape: /^\\\\([`*\\[\\]()#$+\\-.!_&gt;])/, autolink: /^&lt;([^ &gt;]+(@|:\\/)[^ &gt;]+)&gt;/, url: noop, html: /^&lt;!--[\\s\\S]*?--&gt;|^&lt;(\\w+(?!:\\/|[^\\w\\s@]*@)\\b)*?(?:&quot;[^&quot;]*&quot;|&#39;[^&#39;]*&#39;|[^&#39;&quot;&gt;])*?&gt;([\\s\\S]*?)?&lt;\\/\\1&gt;|^&lt;(\\w+(?!:\\/|[^\\w\\s@]*@)\\b)(?:&quot;[^&quot;]*&quot;|&#39;[^&#39;]*&#39;|[^&#39;&quot;&gt;])*?&gt;/, link: /^!?\\[(inside)\\]\\(href\\)/, reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/, nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/, reffn: /^!?\\[\\^(inside)\\]/, strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/, // em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/, em: /^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/, code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/, br: /^ {2,}\\n(?!\\s*$)/, del: noop, text: /^[\\s\\S]+?(?=[\\\\&lt;!\\[_*`$]| {2,}\\n|$)/, math: /^\\$\\$\\s*([\\s\\S]*?[^\\$])\\s*\\$\\$(?!\\$)/, }; 在主題中開啓 mathjax 在 themes/xxx/_config.yml 一般 math: enable: true per_page: true engine: mathjax 在需要渲染公式的文章的 Fornt-matter 中打開 mathjax --- mathjax: true --","categories":[{"name":"技術","slug":"技術","permalink":"/categories/技術/"}],"tags":[{"name":"web","slug":"web","permalink":"/tags/web/"}],"keywords":[{"name":"技術","slug":"技術","permalink":"/categories/技術/"}]}]}